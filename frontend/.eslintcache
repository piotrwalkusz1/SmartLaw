[{"/home/piotr/Projects/SmartLaw/frontend/src/App.tsx":"1","/home/piotr/Projects/SmartLaw/frontend/src/model/IndentationPresentationElement.ts":"2","/home/piotr/Projects/SmartLaw/frontend/src/model/Document.ts":"3","/home/piotr/Projects/SmartLaw/frontend/src/model/Id.ts":"4","/home/piotr/Projects/SmartLaw/frontend/src/component/IndentationPresentationElementView.tsx":"5","/home/piotr/Projects/SmartLaw/frontend/src/utils/Decoders.ts":"6","/home/piotr/Projects/SmartLaw/frontend/src/index.tsx":"7","/home/piotr/Projects/SmartLaw/frontend/src/page/ContractPage.tsx":"8","/home/piotr/Projects/SmartLaw/frontend/src/component/PresentationElementView.tsx":"9","/home/piotr/Projects/SmartLaw/frontend/src/service/DocumentService.ts":"10","/home/piotr/Projects/SmartLaw/frontend/src/component/RuleInvocationView.tsx":"11","/home/piotr/Projects/SmartLaw/frontend/src/model/Contract.ts":"12","/home/piotr/Projects/SmartLaw/frontend/src/model/PresentationElement.ts":"13","/home/piotr/Projects/SmartLaw/frontend/src/model/RuleInvocation.ts":"14","/home/piotr/Projects/SmartLaw/frontend/src/model/MetaPrimitiveValue.ts":"15","/home/piotr/Projects/SmartLaw/frontend/src/model/MetaValue.ts":"16","/home/piotr/Projects/SmartLaw/frontend/src/service/TemplateService.ts":"17","/home/piotr/Projects/SmartLaw/frontend/src/service/RuleService.ts":"18","/home/piotr/Projects/SmartLaw/frontend/src/model/Element.ts":"19","/home/piotr/Projects/SmartLaw/frontend/src/model/State.ts":"20","/home/piotr/Projects/SmartLaw/frontend/src/model/Rule.ts":"21","/home/piotr/Projects/SmartLaw/frontend/src/service/ProjectService.ts":"22","/home/piotr/Projects/SmartLaw/frontend/src/model/RuleInvocationPresentationElement.ts":"23","/home/piotr/Projects/SmartLaw/frontend/src/model/MetaArgument.ts":"24","/home/piotr/Projects/SmartLaw/frontend/src/model/TextEngineTemplate.ts":"25","/home/piotr/Projects/SmartLaw/frontend/src/model/NaturalLanguageProvision.ts":"26","/home/piotr/Projects/SmartLaw/frontend/src/model/NaturalLanguageSection.ts":"27","/home/piotr/Projects/SmartLaw/frontend/src/reportWebVitals.ts":"28","/home/piotr/Projects/SmartLaw/frontend/src/model/NaturalLanguageDocumentObject.ts":"29","/home/piotr/Projects/SmartLaw/frontend/src/model/StaticTemplate.ts":"30"},{"size":419,"mtime":1607113767339,"results":"31","hashOfConfig":"32"},{"size":572,"mtime":1607120718119,"results":"33","hashOfConfig":"32"},{"size":423,"mtime":1606925943303,"results":"34","hashOfConfig":"32"},{"size":298,"mtime":1606925943299,"results":"35","hashOfConfig":"32"},{"size":1879,"mtime":1607120746139,"results":"36","hashOfConfig":"32"},{"size":1315,"mtime":1606926747362,"results":"37","hashOfConfig":"32"},{"size":547,"mtime":1607112291920,"results":"38","hashOfConfig":"32"},{"size":2482,"mtime":1607171933560,"results":"39","hashOfConfig":"32"},{"size":2602,"mtime":1607120718131,"results":"40","hashOfConfig":"32"},{"size":299,"mtime":1606925943311,"results":"41","hashOfConfig":"32"},{"size":2903,"mtime":1607118680538,"results":"42","hashOfConfig":"32"},{"size":782,"mtime":1607071340500,"results":"43","hashOfConfig":"32"},{"size":782,"mtime":1606925943275,"results":"44","hashOfConfig":"32"},{"size":450,"mtime":1606856941405,"results":"45","hashOfConfig":"32"},{"size":384,"mtime":1606928918898,"results":"46","hashOfConfig":"32"},{"size":441,"mtime":1606925494119,"results":"47","hashOfConfig":"32"},{"size":600,"mtime":1606928042182,"results":"48","hashOfConfig":"32"},{"size":330,"mtime":1606928042198,"results":"49","hashOfConfig":"32"},{"size":477,"mtime":1606929768260,"results":"50","hashOfConfig":"32"},{"size":677,"mtime":1606929864944,"results":"51","hashOfConfig":"32"},{"size":993,"mtime":1606927252370,"results":"52","hashOfConfig":"32"},{"size":501,"mtime":1607071100097,"results":"53","hashOfConfig":"32"},{"size":531,"mtime":1606682606600,"results":"54","hashOfConfig":"32"},{"size":515,"mtime":1607114433082,"results":"55","hashOfConfig":"32"},{"size":455,"mtime":1606927033350,"results":"56","hashOfConfig":"32"},{"size":508,"mtime":1607115932827,"results":"57","hashOfConfig":"32"},{"size":717,"mtime":1607120718091,"results":"58","hashOfConfig":"32"},{"size":425,"mtime":1606677110600,"results":"59","hashOfConfig":"32"},{"size":798,"mtime":1607069859759,"results":"60","hashOfConfig":"32"},{"size":352,"mtime":1606926747126,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"gniyzf",{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"68"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/piotr/Projects/SmartLaw/frontend/src/App.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/model/IndentationPresentationElement.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/model/Document.ts",[],["127","128"],"/home/piotr/Projects/SmartLaw/frontend/src/model/Id.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/component/IndentationPresentationElementView.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/utils/Decoders.ts",[],["129","130"],"/home/piotr/Projects/SmartLaw/frontend/src/index.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/page/ContractPage.tsx",["131"],"/** @jsxImportSource @emotion/react */\nimport React, { useEffect, useState } from \"react\";\nimport Contract from \"../model/Contract\";\nimport * as DocumentService from \"../service/DocumentService\";\nimport PresentationElementView from \"../component/PresentationElementView\";\nimport { DocumentEditorContext } from \"../context/DocumentEditorContext\";\nimport { convertDocumentToNaturalLanguage } from \"../service/ProjectService\";\nimport NaturalLanguageDocument from \"../model/NaturalLanguageDocument\";\nimport NaturalLanguageDocumentObject from \"../model/NaturalLanguageDocumentObject\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport { css } from \"@emotion/react\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\n\nconst Style = {\n  title: css`\n    text-align: center;\n    font-size: 20px;\n    font-weight: bold;\n    padding: 10px 0;\n  `,\n};\n\nconst ContractPage = () => {\n  const contractId = \"2\"; //TODO\n  const projectId = \"1\";\n  const [contract, setContract] = useState<Contract | null>(null);\n  const [naturalLanguageDocument, setNaturalLanguageDocument] = useState<NaturalLanguageDocument | null>(null);\n  useEffect(() => {\n    DocumentService.getDocument<Contract>(contractId).then(setContract);\n  }, []);\n  useEffect(() => {\n    if (contract !== null) {\n      convertDocumentToNaturalLanguage(projectId, contract).then(setNaturalLanguageDocument);\n    }\n  }, [contract]);\n\n  return contract === null || naturalLanguageDocument === null ? (\n    <div />\n  ) : (\n    <Container>\n      <Row>\n        <Col>\n          <div css={Style.title}>{naturalLanguageDocument.title}</div>\n          <DocumentEditorContext.Provider value={{ projectId: projectId, documentId: contractId }}>\n            {contract.presentationElements.map((presentationElement, index) => (\n              <PresentationElementView\n                key={index}\n                presentationElement={presentationElement}\n                onPresentationElementChange={(newPresentationElement) => {\n                  setContract((_) => ({\n                    ...contract,\n                    presentationElements: contract.presentationElements.set(index, newPresentationElement),\n                  }));\n                }}\n                naturalLanguageDocumentObject={naturalLanguageDocument.objects.get(index) as NaturalLanguageDocumentObject}\n              />\n            ))}\n          </DocumentEditorContext.Provider>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default ContractPage;\n","/home/piotr/Projects/SmartLaw/frontend/src/component/PresentationElementView.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/service/DocumentService.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/component/RuleInvocationView.tsx",["132"],"import React, { useContext, useEffect, useState } from \"react\";\nimport RuleInvocation from \"../model/RuleInvocation\";\nimport MetaValue from \"../model/MetaValue\";\nimport { List } from \"immutable\";\nimport Rule from \"../model/Rule\";\nimport { getRule } from \"../service/RuleService\";\nimport { DocumentEditorContext, DocumentEditorContextProps } from \"../context/DocumentEditorContext\";\nimport MetaArgument from \"../model/MetaArgument\";\nimport NaturalLanguageProvision from \"../model/NaturalLanguageProvision\";\nimport MetaPrimitiveValue from \"../model/MetaPrimitiveValue\";\nimport { Accordion, Card } from \"react-bootstrap\";\nimport DOMPurify from \"dompurify\";\n\ninterface RuleInvocationViewProps {\n  ruleInvocation: RuleInvocation;\n  onArgumentsChange: (newArguments: List<MetaValue>) => void;\n  naturalLanguageProvision: NaturalLanguageProvision;\n}\n\nconst RuleInvocationView = ({ ruleInvocation, onArgumentsChange, naturalLanguageProvision }: RuleInvocationViewProps) => {\n  const [rule, setRule] = useState<Rule | null>(null);\n  const { projectId, documentId } = useContext(DocumentEditorContext) as DocumentEditorContextProps;\n  useEffect(() => {\n    getRule(ruleInvocation.ruleId, projectId).then((rule) => setRule((_) => rule));\n  }, [ruleInvocation.ruleId, projectId]);\n\n  const renderContent = () => (\n    <div dangerouslySetInnerHTML={{ __html: DOMPurify.sanitize(naturalLanguageProvision.content, { ALLOWED_TAGS: [\"b\"] }) }} />\n  );\n  const renderArgument = (index: number, ruleArgument: MetaArgument, ruleInvocationArgument: MetaValue) => {\n    switch (ruleArgument.type.id) {\n      case \"String\":\n        return (\n          <div key={index}>\n            <span>{ruleArgument.displayName || ruleArgument.name}</span>\n            <input\n              type=\"text\"\n              value={(ruleInvocationArgument as MetaPrimitiveValue).value}\n              onChange={(event) =>\n                onArgumentsChange(\n                  ruleInvocation.arguments.set(index, {\n                    ...ruleInvocationArgument,\n                    value: event.target.value,\n                  } as MetaPrimitiveValue)\n                )\n              }\n            />\n          </div>\n        );\n      default:\n        return <div key={index}>Unknown argument type {ruleArgument.type.id}</div>;\n    }\n  };\n  const renderArgumentsEditor = () =>\n    rule === null ? (\n      <div />\n    ) : (\n      rule.arguments.map((ruleArgument, index) => {\n        return renderArgument(index, ruleArgument, ruleInvocation.arguments.get(index) as MetaValue);\n      })\n    );\n\n  return (\n    <Accordion>\n      <Card>\n        <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n          {renderContent()}\n        </Accordion.Toggle>\n        <Accordion.Collapse eventKey=\"0\">\n          <Card.Body>{renderArgumentsEditor()}</Card.Body>\n        </Accordion.Collapse>\n      </Card>\n    </Accordion>\n  );\n};\n\nexport default RuleInvocationView;\n","/home/piotr/Projects/SmartLaw/frontend/src/model/Contract.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/model/PresentationElement.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/model/RuleInvocation.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/model/MetaPrimitiveValue.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/model/MetaValue.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/service/TemplateService.ts",[],["133","134"],"/home/piotr/Projects/SmartLaw/frontend/src/service/RuleService.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/model/Element.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/model/State.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/model/Rule.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/service/ProjectService.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/model/RuleInvocationPresentationElement.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/model/MetaArgument.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/model/TextEngineTemplate.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/model/NaturalLanguageProvision.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/model/NaturalLanguageSection.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/reportWebVitals.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/model/NaturalLanguageDocumentObject.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/model/StaticTemplate.ts",[],{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","replacedBy":"138"},{"ruleId":"135","replacedBy":"139"},{"ruleId":"137","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":12,"column":10,"nodeType":"143","messageId":"144","endLine":12,"endColumn":25},{"ruleId":"141","severity":1,"message":"145","line":22,"column":22,"nodeType":"143","messageId":"144","endLine":22,"endColumn":32},{"ruleId":"135","replacedBy":"146"},{"ruleId":"137","replacedBy":"147"},"no-native-reassign",["148"],"no-negated-in-lhs",["149"],["148"],["149"],"@typescript-eslint/no-unused-vars","'DragDropContext' is defined but never used.","Identifier","unusedVar","'documentId' is assigned a value but never used.",["148"],["149"],"no-global-assign","no-unsafe-negation"]