[{"/home/piotr/Projects/SmartLaw/frontend/src/page/RootPage.tsx":"1","/home/piotr/Projects/SmartLaw/frontend/src/page/ContractPage.tsx":"2","/home/piotr/Projects/SmartLaw/frontend/src/page/LibraryPage.tsx":"3","/home/piotr/Projects/SmartLaw/frontend/src/reportWebVitals.ts":"4","/home/piotr/Projects/SmartLaw/frontend/src/service/DocumentService.ts":"5","/home/piotr/Projects/SmartLaw/frontend/src/utils/AtomicInteger.ts":"6","/home/piotr/Projects/SmartLaw/frontend/src/model/MetaValue.ts":"7","/home/piotr/Projects/SmartLaw/frontend/src/model/RuleInvocationPresentationElement.ts":"8","/home/piotr/Projects/SmartLaw/frontend/src/model/Contract.ts":"9","/home/piotr/Projects/SmartLaw/frontend/src/model/PresentationElement.ts":"10","/home/piotr/Projects/SmartLaw/frontend/src/model/RuleInvocation.ts":"11","/home/piotr/Projects/SmartLaw/frontend/src/model/MetaPrimitiveValue.ts":"12","/home/piotr/Projects/SmartLaw/frontend/src/model/ExtendPresentationElementsResultDto.ts":"13","/home/piotr/Projects/SmartLaw/frontend/src/model/Template.ts":"14","/home/piotr/Projects/SmartLaw/frontend/src/model/TextEngineTemplate.ts":"15","/home/piotr/Projects/SmartLaw/frontend/src/index.tsx":"16","/home/piotr/Projects/SmartLaw/frontend/src/utils/ListUtils.ts":"17","/home/piotr/Projects/SmartLaw/frontend/src/model/ExtendedRuleInvocationPresentationElement.ts":"18","/home/piotr/Projects/SmartLaw/frontend/src/model/NaturalLanguageProvision.ts":"19","/home/piotr/Projects/SmartLaw/frontend/src/service/RuleService.ts":"20","/home/piotr/Projects/SmartLaw/frontend/src/model/Id.ts":"21","/home/piotr/Projects/SmartLaw/frontend/src/model/StaticTemplate.ts":"22","/home/piotr/Projects/SmartLaw/frontend/src/model/AnnotationType.ts":"23","/home/piotr/Projects/SmartLaw/frontend/src/model/Library.ts":"24","/home/piotr/Projects/SmartLaw/frontend/src/service/ProjectService.ts":"25","/home/piotr/Projects/SmartLaw/frontend/src/model/Document.ts":"26","/home/piotr/Projects/SmartLaw/frontend/src/utils/Decoders.ts":"27","/home/piotr/Projects/SmartLaw/frontend/src/model/ExtendedPresentationElement.ts":"28","/home/piotr/Projects/SmartLaw/frontend/src/model/MetaArgument.ts":"29","/home/piotr/Projects/SmartLaw/frontend/src/component/presentation-element/SectionPresentationElementView.tsx":"30","/home/piotr/Projects/SmartLaw/frontend/src/component/template/TextEngineTemplateEditor.tsx":"31","/home/piotr/Projects/SmartLaw/frontend/src/component/template/StaticTemplateEditor.tsx":"32","/home/piotr/Projects/SmartLaw/frontend/src/common/SelectField.tsx":"33","/home/piotr/Projects/SmartLaw/frontend/src/model/SectionPresentationElement.ts":"34","/home/piotr/Projects/SmartLaw/frontend/src/component/presentation-element/PresentationElementView.tsx":"35","/home/piotr/Projects/SmartLaw/frontend/src/component/rule/RuleArgumentListEditor.tsx":"36","/home/piotr/Projects/SmartLaw/frontend/src/model/OutputMessage.ts":"37","/home/piotr/Projects/SmartLaw/frontend/src/model/ValidationResult.ts":"38","/home/piotr/Projects/SmartLaw/frontend/src/component/template/TemplateEditor.tsx":"39","/home/piotr/Projects/SmartLaw/frontend/src/component/rule/RuleEditor.tsx":"40","/home/piotr/Projects/SmartLaw/frontend/src/component/RuleBrowser.tsx":"41","/home/piotr/Projects/SmartLaw/frontend/src/model/Element.ts":"42","/home/piotr/Projects/SmartLaw/frontend/src/component/rule/RuleArgumentEditor.tsx":"43","/home/piotr/Projects/SmartLaw/frontend/src/model/Annotation.ts":"44","/home/piotr/Projects/SmartLaw/frontend/src/service/Types.ts":"45","/home/piotr/Projects/SmartLaw/frontend/src/utils/Hooks.ts":"46","/home/piotr/Projects/SmartLaw/frontend/src/component/presentation-element/RuleInvocationView.tsx":"47","/home/piotr/Projects/SmartLaw/frontend/src/model/Rule.ts":"48","/home/piotr/Projects/SmartLaw/frontend/src/model/Type.ts":"49","/home/piotr/Projects/SmartLaw/frontend/src/model/DefinitionRef.ts":"50","/home/piotr/Projects/SmartLaw/frontend/src/component/IdField.tsx":"51","/home/piotr/Projects/SmartLaw/frontend/src/common/TextField.tsx":"52","/home/piotr/Projects/SmartLaw/frontend/src/component/element/StateElementEditor.tsx":"53","/home/piotr/Projects/SmartLaw/frontend/src/model/StateElement.ts":"54","/home/piotr/Projects/SmartLaw/frontend/src/component/element/ElementEditor.tsx":"55","/home/piotr/Projects/SmartLaw/frontend/src/component/rule/RuleListEditor.tsx":"56","/home/piotr/Projects/SmartLaw/frontend/src/common/ListEditor.tsx":"57","/home/piotr/Projects/SmartLaw/frontend/src/component/element/ElementListEditor.tsx":"58","/home/piotr/Projects/SmartLaw/frontend/src/component/rule/RuleInterfaceEditor.tsx":"59","/home/piotr/Projects/SmartLaw/frontend/src/common/AddButton.tsx":"60","/home/piotr/Projects/SmartLaw/frontend/src/component/rule/ImplementedRuleInterfacesSelector.tsx":"61","/home/piotr/Projects/SmartLaw/frontend/src/component/rule/RuleInterfaceSelectorPopup.tsx":"62","/home/piotr/Projects/SmartLaw/frontend/src/common/ExpandableArea.tsx":"63","/home/piotr/Projects/SmartLaw/frontend/src/component/rule/RuleInterfaceListEditor.tsx":"64","/home/piotr/Projects/SmartLaw/frontend/src/component/rule/RuleContentEditor.tsx":"65","/home/piotr/Projects/SmartLaw/frontend/src/model/ExtendedSectionPresentationElement.ts":"66","/home/piotr/Projects/SmartLaw/frontend/src/model/RuleInterface.ts":"67","/home/piotr/Projects/SmartLaw/frontend/src/model/GroovyTemplate.ts":"68","/home/piotr/Projects/SmartLaw/frontend/src/model/MetaRuleValue.ts":"69","/home/piotr/Projects/SmartLaw/frontend/src/component/rule/RuleSelectorPopup.tsx":"70","/home/piotr/Projects/SmartLaw/frontend/src/context/ProjectContext.ts":"71","/home/piotr/Projects/SmartLaw/frontend/src/component/rule-invocation/RuleInvocationPresentationView.tsx":"72","/home/piotr/Projects/SmartLaw/frontend/src/component/rule-invocation/RuleInvocationArgumentValueEditor.tsx":"73","/home/piotr/Projects/SmartLaw/frontend/src/component/rule-invocation/RuleInvocationArgumentRuleValueEditor.tsx":"74","/home/piotr/Projects/SmartLaw/frontend/src/App.tsx":"75","/home/piotr/Projects/SmartLaw/frontend/src/common/SelectorPopup.tsx":"76","/home/piotr/Projects/SmartLaw/frontend/src/component/rule-invocation/RuleInvocationArgumentLocalDateValueEditor.tsx":"77","/home/piotr/Projects/SmartLaw/frontend/src/common/NumberField.tsx":"78","/home/piotr/Projects/SmartLaw/frontend/src/model/Project.ts":"79","/home/piotr/Projects/SmartLaw/frontend/src/page/ProjectsManagerPage.tsx":"80","/home/piotr/Projects/SmartLaw/frontend/src/common/Browser.tsx":"81","/home/piotr/Projects/SmartLaw/frontend/src/page/ProjectEditorPage.tsx":"82","/home/piotr/Projects/SmartLaw/frontend/src/component/rule-invocation/RuleInvocationEditor.tsx":"83","/home/piotr/Projects/SmartLaw/frontend/src/component/rule-invocation/RuleInvocationArgumentStringValueEditor.tsx":"84","/home/piotr/Projects/SmartLaw/frontend/src/common/SelectorButtonField.tsx":"85","/home/piotr/Projects/SmartLaw/frontend/src/component/rule-invocation/RuleInvocationArgumentEditor.tsx":"86","/home/piotr/Projects/SmartLaw/frontend/src/component/rule-invocation/RuleInvocationArgumentIntegerValueEditor.tsx":"87","/home/piotr/Projects/SmartLaw/frontend/src/page/CreateProjectPage.tsx":"88","/home/piotr/Projects/SmartLaw/frontend/src/model/Validator.ts":"89","/home/piotr/Projects/SmartLaw/frontend/src/model/RegexValidator.ts":"90","/home/piotr/Projects/SmartLaw/frontend/src/component/validator/ValidatorEditor.tsx":"91","/home/piotr/Projects/SmartLaw/frontend/src/component/validator/NumberRangeValidatorEditor.tsx":"92","/home/piotr/Projects/SmartLaw/frontend/src/component/rule-invocation/RuleInvocationArgumentListEditor.tsx":"93","/home/piotr/Projects/SmartLaw/frontend/src/model/NumberRangeValidator.ts":"94","/home/piotr/Projects/SmartLaw/frontend/src/component/rule/RuleArgumentValidatorListEditor.tsx":"95","/home/piotr/Projects/SmartLaw/frontend/src/component/rule-invocation/RuleInvocationValidationResults.tsx":"96","/home/piotr/Projects/SmartLaw/frontend/src/model/GenericValidator.ts":"97","/home/piotr/Projects/SmartLaw/frontend/src/component/validator/RegexValidatorEditor.tsx":"98","/home/piotr/Projects/SmartLaw/frontend/src/common/EditableTextField.tsx":"99","/home/piotr/Projects/SmartLaw/frontend/src/component/element/type/DefinitionRefEditor.tsx":"100","/home/piotr/Projects/SmartLaw/frontend/src/component/element/type/TypeEditor.tsx":"101","/home/piotr/Projects/SmartLaw/frontend/src/component/template/GroovyTemplateEditor.tsx":"102","/home/piotr/Projects/SmartLaw/frontend/src/model/GenericType.ts":"103","/home/piotr/Projects/SmartLaw/frontend/src/component/validator/GenericValidatorEditor.tsx":"104","/home/piotr/Projects/SmartLaw/frontend/src/model/InterfaceRef.ts":"105","/home/piotr/Projects/SmartLaw/frontend/src/model/ListTemplate.ts":"106","/home/piotr/Projects/SmartLaw/frontend/src/component/element/template/ElementListTemplateEditor.tsx":"107","/home/piotr/Projects/SmartLaw/frontend/src/component/element/template/ListTemplateEditor.tsx":"108","/home/piotr/Projects/SmartLaw/frontend/src/component/element/template/StateTemplateEditor.tsx":"109","/home/piotr/Projects/SmartLaw/frontend/src/model/IdTemplate.ts":"110","/home/piotr/Projects/SmartLaw/frontend/src/component/element/template/StringTemplateEditor.tsx":"111","/home/piotr/Projects/SmartLaw/frontend/src/model/StateTemplate.ts":"112","/home/piotr/Projects/SmartLaw/frontend/src/model/DefinitionRefTemplate.ts":"113","/home/piotr/Projects/SmartLaw/frontend/src/component/element/template/DefinitionRefTemplateEditor.tsx":"114","/home/piotr/Projects/SmartLaw/frontend/src/component/element/template/TypeTemplateEditor.tsx":"115","/home/piotr/Projects/SmartLaw/frontend/src/component/element/template/IdTemplateEditor.tsx":"116","/home/piotr/Projects/SmartLaw/frontend/src/component/element/template/MetaPrimitiveValueTemplateEditor.tsx":"117","/home/piotr/Projects/SmartLaw/frontend/src/service/MetaTypes.ts":"118","/home/piotr/Projects/SmartLaw/frontend/src/model/MetaPrimitiveValueTemplate.ts":"119"},{"size":731,"mtime":1613911476430,"results":"120","hashOfConfig":"121"},{"size":16908,"mtime":1615026106556,"results":"122","hashOfConfig":"121"},{"size":2346,"mtime":1614895292224,"results":"123","hashOfConfig":"121"},{"size":425,"mtime":1606677110600,"results":"124","hashOfConfig":"121"},{"size":1262,"mtime":1614895292232,"results":"125","hashOfConfig":"121"},{"size":109,"mtime":1607185036736,"results":"126","hashOfConfig":"121"},{"size":582,"mtime":1613814868587,"results":"127","hashOfConfig":"121"},{"size":1122,"mtime":1613684922827,"results":"128","hashOfConfig":"121"},{"size":782,"mtime":1607071340500,"results":"129","hashOfConfig":"121"},{"size":784,"mtime":1607192657278,"results":"130","hashOfConfig":"121"},{"size":454,"mtime":1613684634764,"results":"131","hashOfConfig":"121"},{"size":384,"mtime":1606928918898,"results":"132","hashOfConfig":"121"},{"size":972,"mtime":1607438052327,"results":"133","hashOfConfig":"121"},{"size":2836,"mtime":1615137072025,"results":"134","hashOfConfig":"121"},{"size":1079,"mtime":1615122585038,"results":"135","hashOfConfig":"121"},{"size":547,"mtime":1607112291920,"results":"136","hashOfConfig":"121"},{"size":281,"mtime":1607174191273,"results":"137","hashOfConfig":"121"},{"size":2350,"mtime":1613938718035,"results":"138","hashOfConfig":"121"},{"size":464,"mtime":1607187157261,"results":"139","hashOfConfig":"121"},{"size":1859,"mtime":1615060969787,"results":"140","hashOfConfig":"121"},{"size":536,"mtime":1613408950670,"results":"141","hashOfConfig":"121"},{"size":879,"mtime":1615112202910,"results":"142","hashOfConfig":"121"},{"size":1069,"mtime":1609947567371,"results":"143","hashOfConfig":"121"},{"size":2170,"mtime":1613427261130,"results":"144","hashOfConfig":"121"},{"size":2267,"mtime":1615026106564,"results":"145","hashOfConfig":"121"},{"size":554,"mtime":1612990404123,"results":"146","hashOfConfig":"121"},{"size":1606,"mtime":1613938254225,"results":"147","hashOfConfig":"121"},{"size":795,"mtime":1607193095050,"results":"148","hashOfConfig":"121"},{"size":712,"mtime":1613912958721,"results":"149","hashOfConfig":"121"},{"size":3090,"mtime":1613844507982,"results":"150","hashOfConfig":"121"},{"size":695,"mtime":1613236920002,"results":"151","hashOfConfig":"121"},{"size":671,"mtime":1615066353653,"results":"152","hashOfConfig":"121"},{"size":856,"mtime":1613928095955,"results":"153","hashOfConfig":"121"},{"size":734,"mtime":1607192657254,"results":"154","hashOfConfig":"121"},{"size":1590,"mtime":1613844508078,"results":"155","hashOfConfig":"121"},{"size":1771,"mtime":1613917420360,"results":"156","hashOfConfig":"121"},{"size":499,"mtime":1607437780486,"results":"157","hashOfConfig":"121"},{"size":342,"mtime":1607368826653,"results":"158","hashOfConfig":"121"},{"size":2115,"mtime":1615119777983,"results":"159","hashOfConfig":"121"},{"size":1870,"mtime":1613681317935,"results":"160","hashOfConfig":"121"},{"size":2234,"mtime":1607627231312,"results":"161","hashOfConfig":"121"},{"size":561,"mtime":1613394542866,"results":"162","hashOfConfig":"121"},{"size":1388,"mtime":1613918676453,"results":"163","hashOfConfig":"121"},{"size":595,"mtime":1609947374768,"results":"164","hashOfConfig":"121"},{"size":262,"mtime":1615061140473,"results":"165","hashOfConfig":"121"},{"size":378,"mtime":1613236190855,"results":"166","hashOfConfig":"121"},{"size":1330,"mtime":1613844507966,"results":"167","hashOfConfig":"121"},{"size":1137,"mtime":1615073471695,"results":"168","hashOfConfig":"121"},{"size":714,"mtime":1615052165444,"results":"169","hashOfConfig":"121"},{"size":673,"mtime":1613410065098,"results":"170","hashOfConfig":"121"},{"size":900,"mtime":1613928149568,"results":"171","hashOfConfig":"121"},{"size":1015,"mtime":1615024096014,"results":"172","hashOfConfig":"121"},{"size":781,"mtime":1615052253149,"results":"173","hashOfConfig":"121"},{"size":1302,"mtime":1615061140493,"results":"174","hashOfConfig":"121"},{"size":1406,"mtime":1613930082710,"results":"175","hashOfConfig":"121"},{"size":1327,"mtime":1615118120229,"results":"176","hashOfConfig":"121"},{"size":2177,"mtime":1615117917846,"results":"177","hashOfConfig":"121"},{"size":815,"mtime":1613930082718,"results":"178","hashOfConfig":"121"},{"size":975,"mtime":1613427261162,"results":"179","hashOfConfig":"121"},{"size":577,"mtime":1613395151158,"results":"180","hashOfConfig":"121"},{"size":1434,"mtime":1613919177538,"results":"181","hashOfConfig":"121"},{"size":1006,"mtime":1613919129240,"results":"182","hashOfConfig":"121"},{"size":694,"mtime":1613931745636,"results":"183","hashOfConfig":"121"},{"size":1094,"mtime":1613427261138,"results":"184","hashOfConfig":"121"},{"size":905,"mtime":1615138856736,"results":"185","hashOfConfig":"121"},{"size":1232,"mtime":1613938254225,"results":"186","hashOfConfig":"121"},{"size":417,"mtime":1613407241839,"results":"187","hashOfConfig":"121"},{"size":699,"mtime":1615112842867,"results":"188","hashOfConfig":"121"},{"size":405,"mtime":1613816284224,"results":"189","hashOfConfig":"121"},{"size":898,"mtime":1613919452471,"results":"190","hashOfConfig":"121"},{"size":255,"mtime":1613817321381,"results":"191","hashOfConfig":"121"},{"size":2701,"mtime":1613938718023,"results":"192","hashOfConfig":"121"},{"size":2180,"mtime":1615060969779,"results":"193","hashOfConfig":"121"},{"size":2128,"mtime":1613928488368,"results":"194","hashOfConfig":"121"},{"size":455,"mtime":1609942707986,"results":"195","hashOfConfig":"121"},{"size":821,"mtime":1613919062063,"results":"196","hashOfConfig":"121"},{"size":805,"mtime":1613819901164,"results":"197","hashOfConfig":"121"},{"size":550,"mtime":1613928099458,"results":"198","hashOfConfig":"121"},{"size":485,"mtime":1613905873449,"results":"199","hashOfConfig":"121"},{"size":868,"mtime":1613912106457,"results":"200","hashOfConfig":"121"},{"size":1215,"mtime":1613911984732,"results":"201","hashOfConfig":"121"},{"size":1364,"mtime":1613930551246,"results":"202","hashOfConfig":"121"},{"size":2378,"mtime":1613928375824,"results":"203","hashOfConfig":"121"},{"size":595,"mtime":1613819495520,"results":"204","hashOfConfig":"121"},{"size":907,"mtime":1613927925899,"results":"205","hashOfConfig":"121"},{"size":1548,"mtime":1613931813179,"results":"206","hashOfConfig":"121"},{"size":628,"mtime":1613819724959,"results":"207","hashOfConfig":"121"},{"size":804,"mtime":1613912156441,"results":"208","hashOfConfig":"121"},{"size":767,"mtime":1613912958733,"results":"209","hashOfConfig":"121"},{"size":475,"mtime":1613918676465,"results":"210","hashOfConfig":"121"},{"size":2353,"mtime":1613918725769,"results":"211","hashOfConfig":"121"},{"size":878,"mtime":1613918901419,"results":"212","hashOfConfig":"121"},{"size":1552,"mtime":1613920574750,"results":"213","hashOfConfig":"121"},{"size":610,"mtime":1613918676473,"results":"214","hashOfConfig":"121"},{"size":1236,"mtime":1613918676429,"results":"215","hashOfConfig":"121"},{"size":682,"mtime":1613819080956,"results":"216","hashOfConfig":"121"},{"size":660,"mtime":1613918676409,"results":"217","hashOfConfig":"121"},{"size":504,"mtime":1613917578474,"results":"218","hashOfConfig":"121"},{"size":1005,"mtime":1615024165272,"results":"219","hashOfConfig":"121"},{"size":564,"mtime":1615052165460,"results":"220","hashOfConfig":"121"},{"size":1693,"mtime":1615052332142,"results":"221","hashOfConfig":"121"},{"size":537,"mtime":1615064948518,"results":"222","hashOfConfig":"121"},{"size":447,"mtime":1615028471209,"results":"223","hashOfConfig":"121"},{"size":572,"mtime":1613917664331,"results":"224","hashOfConfig":"121"},{"size":673,"mtime":1615028471197,"results":"225","hashOfConfig":"121"},{"size":874,"mtime":1615113104334,"results":"226","hashOfConfig":"121"},{"size":1277,"mtime":1615118037336,"results":"227","hashOfConfig":"121"},{"size":1216,"mtime":1615118224752,"results":"228","hashOfConfig":"121"},{"size":1289,"mtime":1615138443778,"results":"229","hashOfConfig":"121"},{"size":953,"mtime":1615119777975,"results":"230","hashOfConfig":"121"},{"size":2790,"mtime":1615135037455,"results":"231","hashOfConfig":"121"},{"size":2052,"mtime":1615138494873,"results":"232","hashOfConfig":"121"},{"size":1267,"mtime":1615136178233,"results":"233","hashOfConfig":"121"},{"size":577,"mtime":1615135997685,"results":"234","hashOfConfig":"121"},{"size":736,"mtime":1615136301700,"results":"235","hashOfConfig":"121"},{"size":1150,"mtime":1615120281948,"results":"236","hashOfConfig":"121"},{"size":614,"mtime":1615138049013,"results":"237","hashOfConfig":"121"},{"size":470,"mtime":1615060969795,"results":"238","hashOfConfig":"121"},{"size":995,"mtime":1615137072041,"results":"239","hashOfConfig":"121"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},"1t9sslt",{"filePath":"243","messages":"244","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"242"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"242"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"263"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"282"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"250"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"282"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"263"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"263"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"336"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"339"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"282"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"339"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361","usedDeprecatedRules":"282"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"339"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"282"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"282"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"282"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"402"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"419","usedDeprecatedRules":"250"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"282"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"282"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"460","messages":"461","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"462","messages":"463","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"468","messages":"469","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"470","messages":"471","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"472","messages":"473","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"478","messages":"479","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"480","usedDeprecatedRules":"263"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"487","usedDeprecatedRules":"242"},{"filePath":"488","messages":"489","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"490","messages":"491","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"492","messages":"493","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"494","messages":"495","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"496","messages":"497","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"498","messages":"499","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/piotr/Projects/SmartLaw/frontend/src/page/RootPage.tsx",[],["500","501"],"/home/piotr/Projects/SmartLaw/frontend/src/page/ContractPage.tsx",["502","503","504"],"/** @jsxImportSource @emotion/react */\nimport React, { useContext, useEffect, useState } from \"react\";\nimport Contract from \"../model/Contract\";\nimport * as DocumentService from \"../service/DocumentService\";\nimport { saveDocument } from \"../service/DocumentService\";\nimport PresentationElementView from \"../component/presentation-element/PresentationElementView\";\nimport { convertToSmartContract, downloadDocument, extendPresentationElements } from \"../service/ProjectService\";\nimport { Button, Col, Row } from \"react-bootstrap\";\nimport { css } from \"@emotion/react\";\nimport { DragDropContext, Draggable, Droppable, DropResult } from \"react-beautiful-dnd\";\nimport { List, Map } from \"immutable\";\nimport { AtomicInteger } from \"../utils/AtomicInteger\";\nimport { ExtendedSectionPresentationElement } from \"../model/ExtendedSectionPresentationElement\";\nimport { ExtendedRuleInvocationPresentationElement } from \"../model/ExtendedRuleInvocationPresentationElement\";\nimport { ExtendedPresentationElement } from \"../model/ExtendedPresentationElement\";\nimport { moveItemInList } from \"../utils/ListUtils\";\nimport MetaValue from \"../model/MetaValue\";\nimport PresentationElement from \"../model/PresentationElement\";\nimport SectionPresentationElement from \"../model/SectionPresentationElement\";\nimport RuleInvocationPresentationElement from \"../model/RuleInvocationPresentationElement\";\nimport RuleBrowser from \"../component/RuleBrowser\";\nimport Rule from \"../model/Rule\";\nimport NaturalLanguageProvision from \"../model/NaturalLanguageProvision\";\nimport { OutputMessage } from \"../model/OutputMessage\";\nimport Id from \"../model/Id\";\nimport { DocumentType } from \"../model/Document\";\nimport AddButton from \"../common/AddButton\";\nimport { prepareEmptyRuleInvocationArgument } from \"../service/RuleService\";\nimport { ProjectContext } from \"../context/ProjectContext\";\nimport EditableTextField from \"../common/EditableTextField\";\n\nconst Style = {\n  title: css`\n    text-align: center;\n    font-size: 20px;\n    font-weight: bold;\n    padding: 10px 0;\n  `,\n};\n\nexport class DocumentEditorElement {\n  id: string;\n\n  protected constructor(id: string) {\n    this.id = id;\n  }\n}\n\nexport class DocumentEditorSectionElement extends DocumentEditorElement {\n  title: string;\n  documentEditorElements: List<DocumentEditorElement>;\n\n  constructor(id: string, title: string, documentEditorElements: List<DocumentEditorElement>) {\n    super(id);\n    this.title = title;\n    this.documentEditorElements = documentEditorElements;\n  }\n\n  withDocumentEditorElements(documentEditorElements: List<DocumentEditorElement>): DocumentEditorSectionElement {\n    return new DocumentEditorSectionElement(this.id, this.title, documentEditorElements);\n  }\n}\n\nexport class DocumentEditorRuleInvocationElement extends DocumentEditorElement {\n  extendedPresentationElement: ExtendedRuleInvocationPresentationElement;\n\n  constructor(id: string, extendedPresentationElement: ExtendedRuleInvocationPresentationElement) {\n    super(id);\n    this.extendedPresentationElement = extendedPresentationElement;\n  }\n\n  withRuleInvocationArguments(ruleInvocationArguments: Map<String, MetaValue>): DocumentEditorRuleInvocationElement {\n    return this.withExtendedPresentationElement(this.extendedPresentationElement.withRuleInvocationArguments(ruleInvocationArguments));\n  }\n\n  withExtendedPresentationElement(\n    extendedPresentationElement: ExtendedRuleInvocationPresentationElement\n  ): DocumentEditorRuleInvocationElement {\n    return new DocumentEditorRuleInvocationElement(this.id, extendedPresentationElement);\n  }\n}\n\nconst ContractPage = ({ contractDbId }: { contractDbId: string }) => {\n  const { projectId } = useContext(ProjectContext);\n  const [contractId, setContractId] = useState<Id | undefined>(undefined);\n  const [contractName, setContractName] = useState<string | undefined>(undefined);\n  const [contractDescription, setContractDescription] = useState<string | null>(null);\n  const [elements, setElements] = useState<List<DocumentEditorElement> | undefined>(undefined);\n  const [presentationElementsPendingExtending, setPresentationElementsExtending] = useState<List<PresentationElement> | undefined>(\n    undefined\n  );\n  const [nextElementId, _] = useState(new AtomicInteger());\n  const [rulesSearchResult, setRulesSearchResult] = useState<List<Rule>>(List());\n  const [outputMessages, setOutputMessages] = useState<List<OutputMessage>>(List());\n  useEffect(() => {\n    let isSubscribed = true;\n    DocumentService.getContract(contractDbId).then((contract) => {\n      extendPresentationElements(projectId, contract.presentationElements, contract.presentationElements).then((result) => {\n        if (isSubscribed) {\n          setContractId(contract.id);\n          setContractName(contract.name);\n          setContractDescription(contract.description);\n          setElements((oldElements) =>\n            mergeDocumentEditorElementsAndExtendedPresentationElements(result.extendedPresentationElements, oldElements)\n          );\n          setOutputMessages(result.outputMessages);\n        }\n      });\n    });\n\n    return () => {\n      isSubscribed = false;\n    };\n  }, []);\n  useEffect(() => {\n    if (presentationElementsPendingExtending === undefined) {\n      return;\n    }\n    let isSubscribed = true;\n\n    extendPresentationElements(projectId, presentationElementsPendingExtending, presentationElementsPendingExtending).then((result) => {\n      if (isSubscribed) {\n        setElements((oldElements) =>\n          mergeDocumentEditorElementsAndExtendedPresentationElements(result.extendedPresentationElements, oldElements)\n        );\n        setOutputMessages(result.outputMessages);\n      }\n    });\n\n    return () => {\n      isSubscribed = false;\n    };\n  }, [presentationElementsPendingExtending]);\n\n  const refreshElements = (elements: List<DocumentEditorElement>): void => {\n    const presentationElements = extractPresentationElementsFromDocumentEditorElements(elements);\n    setElements(elements);\n    setPresentationElementsExtending(presentationElements);\n  };\n\n  const extractPresentationElementsFromDocumentEditorElements = (elements: List<DocumentEditorElement>): List<PresentationElement> => {\n    return elements.map((element) => extractPresentationElementFromDocumentEditorElement(element));\n  };\n\n  const extractPresentationElementFromDocumentEditorElement = (element: DocumentEditorElement): PresentationElement => {\n    if (element instanceof DocumentEditorSectionElement) {\n      return new SectionPresentationElement(extractPresentationElementsFromDocumentEditorElements(element.documentEditorElements));\n    } else if (element instanceof DocumentEditorRuleInvocationElement) {\n      return new RuleInvocationPresentationElement(element.extendedPresentationElement.presentationElement.ruleInvocation);\n    } else {\n      throw new Error(\"Usupported type\");\n    }\n  };\n\n  const mergeDocumentEditorElementsAndExtendedPresentationElements = (\n    extendedPresentationElements: List<ExtendedPresentationElement>,\n    elements?: List<DocumentEditorElement>\n  ): List<DocumentEditorElement> => {\n    return extendedPresentationElements.map((extendedPresentationElement, index) =>\n      mergeDocumentEditorElementAndExtendedPresentationElement(extendedPresentationElement, elements?.get(index))\n    );\n  };\n\n  const mergeDocumentEditorElementAndExtendedPresentationElement = (\n    extendedPresentationElement: ExtendedPresentationElement,\n    element?: DocumentEditorElement\n  ): DocumentEditorElement => {\n    if (extendedPresentationElement instanceof ExtendedRuleInvocationPresentationElement) {\n      return mergeDocumentEditorRuleInvocationElementAndExtendedRuleInvocationPresentationElement(extendedPresentationElement, element);\n    } else if (extendedPresentationElement instanceof ExtendedSectionPresentationElement) {\n      return mergeDocumentEditorSectionElementAndExtendedSectionPresentationElement(extendedPresentationElement, element);\n    } else {\n      throw Error(\"ExtendedPresentationElement type is not supported\");\n    }\n  };\n\n  const mergeDocumentEditorRuleInvocationElementAndExtendedRuleInvocationPresentationElement = (\n    extendedPresentationElement: ExtendedRuleInvocationPresentationElement,\n    element?: DocumentEditorElement\n  ): DocumentEditorRuleInvocationElement => {\n    const id = element instanceof DocumentEditorRuleInvocationElement ? element.id : nextElementId.next().toString();\n\n    return new DocumentEditorRuleInvocationElement(id, extendedPresentationElement);\n  };\n\n  const mergeDocumentEditorSectionElementAndExtendedSectionPresentationElement = (\n    extendedPresentationElement: ExtendedSectionPresentationElement,\n    element?: DocumentEditorElement\n  ): DocumentEditorSectionElement => {\n    const id = element instanceof DocumentEditorSectionElement ? element.id : nextElementId.next().toString();\n    const elements = element instanceof DocumentEditorSectionElement ? element.documentEditorElements : undefined;\n\n    return new DocumentEditorSectionElement(\n      id,\n      extendedPresentationElement.title,\n      mergeDocumentEditorElementsAndExtendedPresentationElements(extendedPresentationElement.nestedExtendedPresentationElements, elements)\n    );\n  };\n\n  const getListStyle = (isDraggingOver: boolean) => ({\n    background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\n  });\n\n  const getElementFromSection = (\n    elements: List<DocumentEditorElement>,\n    sectionId: string,\n    index: number\n  ): DocumentEditorElement | undefined => {\n    for (let element of elements.toArray()) {\n      if (element instanceof DocumentEditorSectionElement) {\n        if (element.id === sectionId) {\n          return element.documentEditorElements.get(index);\n        } else {\n          const nestedElement = getElementFromSection(element.documentEditorElements, sectionId, index);\n          if (nestedElement) {\n            return nestedElement;\n          }\n        }\n      }\n    }\n  };\n\n  const removeElementFromSection = (\n    elements: List<DocumentEditorElement>,\n    sectionId: string,\n    index: number\n  ): List<DocumentEditorElement> => {\n    return elements.map((element) => {\n      if (element instanceof DocumentEditorSectionElement) {\n        if (element.id === sectionId) {\n          return element.withDocumentEditorElements(element.documentEditorElements.remove(index));\n        } else {\n          return element.withDocumentEditorElements(removeElementFromSection(element.documentEditorElements, sectionId, index));\n        }\n      } else {\n        return element;\n      }\n    });\n  };\n\n  const addElementToSection = (\n    elements: List<DocumentEditorElement>,\n    sectionId: string,\n    index: number,\n    newElement: DocumentEditorElement\n  ): List<DocumentEditorElement> => {\n    return elements.map((element) => {\n      if (element instanceof DocumentEditorSectionElement) {\n        if (element.id === sectionId) {\n          return element.withDocumentEditorElements(element.documentEditorElements.insert(index, newElement));\n        } else {\n          return element.withDocumentEditorElements(removeElementFromSection(element.documentEditorElements, sectionId, index));\n        }\n      } else {\n        return element;\n      }\n    });\n  };\n\n  const onDragEnd = (result: DropResult) => {\n    if (!elements || !result.destination) {\n      return;\n    }\n\n    if (result.source.droppableId === \"droppable\") {\n      refreshElements(moveItemInList(elements, result.source.index, result.destination.index));\n    }\n    if (result.source.droppableId === \"search\") {\n      const rule = rulesSearchResult.get(result.source.index);\n      if (rule) {\n        const newElement = new DocumentEditorRuleInvocationElement(\n          nextElementId.next().toString(),\n          new ExtendedRuleInvocationPresentationElement(\n            new RuleInvocationPresentationElement({\n              ruleId: rule.id,\n              arguments: Map(rule.arguments.map((argument) => [argument.name, prepareEmptyRuleInvocationArgument(argument)])),\n            }),\n            new NaturalLanguageProvision(\"\"),\n            rule,\n            Map()\n          )\n        );\n        refreshElements(addElementToSection(elements, result.destination.droppableId, result.destination.index, newElement));\n      }\n    } else {\n      const elementToMove = getElementFromSection(elements, result.source.droppableId, result.source.index);\n      if (elementToMove) {\n        refreshElements(\n          addElementToSection(\n            removeElementFromSection(elements, result.source.droppableId, result.source.index),\n            result.destination.droppableId,\n            result.destination.index,\n            elementToMove\n          )\n        );\n      }\n    }\n  };\n\n  const convertToContract = (elements: List<DocumentEditorElement>): Contract => {\n    return {\n      documentType: DocumentType.Contract,\n      id: contractId,\n      name: contractName,\n      description: contractDescription,\n      presentationElements: extractPresentationElementsFromDocumentEditorElements(elements),\n    } as Contract;\n  };\n\n  return !contractName || !elements || !contractId ? (\n    <div />\n  ) : (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <Row>\n        <Col xs={4}>\n          <Row>\n            <Col>\n              <div css={Style.title}>Rule browser</div>\n              <RuleBrowser projectId={projectId} searchResult={rulesSearchResult} onSearchResultChange={setRulesSearchResult} />\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <div>\n                <div css={Style.title} style={{ marginTop: \"20px\" }}>\n                  Actions\n                </div>\n                <div style={{ display: \"flex\" }}>\n                  <Button style={{ flexGrow: 1 }} onClick={() => saveDocument(contractDbId, convertToContract(elements))}>\n                    Save\n                  </Button>\n                  <Button style={{ marginLeft: \"15px\", flexGrow: 1 }} onClick={() => refreshElements(elements)}>\n                    Refresh\n                  </Button>\n                  <Button\n                    style={{ marginLeft: \"15px\", flexGrow: 1 }}\n                    onClick={() => downloadDocument(projectId, convertToContract(elements))}\n                  >\n                    Generate document\n                  </Button>\n                  <Button\n                    style={{ marginLeft: \"15px\", flexGrow: 1 }}\n                    onClick={() => convertToSmartContract(projectId, convertToContract(elements))}\n                  >\n                    Smart contract\n                  </Button>\n                </div>\n              </div>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <div>\n                <div css={Style.title} style={{ marginTop: \"20px\" }}>\n                  Compilation errors\n                </div>\n                <div style={{ overflowY: \"auto\" }}>\n                  {outputMessages.map((message, index) => (\n                    <div key={index}>{message.message}</div>\n                  ))}\n                </div>\n              </div>\n            </Col>\n          </Row>\n        </Col>\n        <Col>\n          <div>\n            <div css={Style.title}>\n              <EditableTextField value={contractName} onChange={setContractName} />\n            </div>\n            <div>\n              <Droppable droppableId=\"droppable\" type=\"top\">\n                {(provided, snapshot) => (\n                  <div {...provided.droppableProps} ref={provided.innerRef} style={getListStyle(snapshot.isDraggingOver)}>\n                    {elements.map((element, index) => (\n                      <Draggable key={element.id} draggableId={element.id} index={index}>\n                        {(provided, snapshot) => (\n                          <div ref={provided.innerRef} {...provided.draggableProps} style={provided.draggableProps.style}>\n                            <PresentationElementView\n                              key={index}\n                              element={element}\n                              onElementChange={(element) => {\n                                refreshElements(elements.set(index, element));\n                              }}\n                              dragHandleProps={provided.dragHandleProps}\n                              onElementRemove={() => refreshElements(elements.remove(index))}\n                            />\n                          </div>\n                        )}\n                      </Draggable>\n                    ))}\n                    {provided.placeholder}\n                  </div>\n                )}\n              </Droppable>\n              <AddButton\n                onClick={() =>\n                  refreshElements(elements.push(new DocumentEditorSectionElement(nextElementId.next().toString(), \"\", List())))\n                }\n              />\n            </div>\n          </div>\n        </Col>\n      </Row>\n    </DragDropContext>\n  );\n};\n\nexport default ContractPage;\n","/home/piotr/Projects/SmartLaw/frontend/src/page/LibraryPage.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/reportWebVitals.ts",[],["505","506"],"/home/piotr/Projects/SmartLaw/frontend/src/service/DocumentService.ts",[],["507","508"],"/home/piotr/Projects/SmartLaw/frontend/src/utils/AtomicInteger.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/model/MetaValue.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/model/RuleInvocationPresentationElement.ts",["509"],"import RuleInvocation, { decodeRuleInvocation } from \"./RuleInvocation\";\nimport PresentationElement, { PresentationElementType } from \"./PresentationElement\";\nimport MetaValue from \"./MetaValue\";\nimport { List, Map } from \"immutable\";\n\nexport const decodeRuleInvocationPresentationElement = (json: any): RuleInvocationPresentationElement => {\n  return new RuleInvocationPresentationElement(decodeRuleInvocation(json.ruleInvocation));\n};\n\nexport default class RuleInvocationPresentationElement implements PresentationElement {\n  readonly type: PresentationElementType = PresentationElementType.RuleInvocation;\n  ruleInvocation: RuleInvocation;\n\n  constructor(ruleInvocation: RuleInvocation) {\n    this.ruleInvocation = ruleInvocation;\n  }\n\n  withRuleInvocationArguments(ruleInvocationArguments: Map<String, MetaValue>): RuleInvocationPresentationElement {\n    return this.withRuleInvocation({ ...this.ruleInvocation, arguments: ruleInvocationArguments });\n  }\n\n  withRuleInvocation(ruleInvocation: RuleInvocation): RuleInvocationPresentationElement {\n    return new RuleInvocationPresentationElement(ruleInvocation);\n  }\n}\n","/home/piotr/Projects/SmartLaw/frontend/src/model/Contract.ts",[],["510","511"],"/home/piotr/Projects/SmartLaw/frontend/src/model/PresentationElement.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/model/RuleInvocation.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/model/MetaPrimitiveValue.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/model/ExtendPresentationElementsResultDto.ts",[],["512","513"],"/home/piotr/Projects/SmartLaw/frontend/src/model/Template.ts",["514"],"import { decodeStaticTemplate, prepareEmptyStaticTemplate } from \"./StaticTemplate\";\nimport { decodeTextEngineTemplate, prepareEmptyTextEngineTemplate } from \"./TextEngineTemplate\";\nimport { decodeGroovyTemplate, prepareEmptyGroovyTemplate } from \"./GroovyTemplate\";\nimport { decodeListTemplate, prepareEmptyListTemplate } from \"./ListTemplate\";\nimport { decodeIdTemplate, prepareEmptyIdTemplate } from \"./IdTemplate\";\nimport { decodeEnum } from \"../utils/Decoders\";\nimport { decodeStateTemplate, prepareEmptyStateTemplate } from \"./StateTemplate\";\nimport { decodeDefinitionRefTemplate, prepareEmptyDefinitionRefTemplate } from \"./DefinitionRefTemplate\";\nimport { decodeMetaPrimitiveValueTemplate, prepareEmptyMetaPrimitiveValueTemplate } from \"./MetaPrimitiveValueTemplate\";\n\nexport enum TemplateType {\n  Static = \"Static\",\n  TextEngine = \"TextEngine\",\n  Groovy = \"Groovy\",\n  ListTemplate = \"ListTemplate\",\n  IdTemplate = \"IdTemplate\",\n  StateTemplate = \"StateTemplate\",\n  DefinitionRefTemplate = \"DefinitionRefTemplate\",\n  MetaPrimitiveValueTemplate = \"MetaPrimitiveValueTemplate\",\n}\n\nexport const decodeTemplate = <T, R extends T>(json: any, decodeTemplateResult: (json: any) => R): Template<T> => {\n  const templateType = decodeEnum(json.templateType, TemplateType);\n\n  switch (templateType) {\n    case TemplateType.Static:\n      return decodeStaticTemplate(json, decodeTemplateResult);\n    case TemplateType.TextEngine:\n      return decodeTextEngineTemplate(json);\n    case TemplateType.Groovy:\n      return decodeGroovyTemplate(json);\n    case TemplateType.ListTemplate:\n      return decodeListTemplate(json, decodeTemplateResult);\n    case TemplateType.IdTemplate:\n      return decodeIdTemplate(json);\n    case TemplateType.StateTemplate:\n      return decodeStateTemplate(json);\n    case TemplateType.DefinitionRefTemplate:\n      return decodeDefinitionRefTemplate(json);\n    case TemplateType.MetaPrimitiveValueTemplate:\n      return decodeMetaPrimitiveValueTemplate(json);\n  }\n};\n\nexport default interface Template<T> {\n  templateType: TemplateType;\n}\n\nexport const prepareEmptyTemplate = (templateType: TemplateType): Template<any> => {\n  switch (templateType) {\n    case TemplateType.TextEngine:\n      return prepareEmptyTextEngineTemplate();\n    case TemplateType.Static:\n      return prepareEmptyStaticTemplate();\n    case TemplateType.Groovy:\n      return prepareEmptyGroovyTemplate();\n    case TemplateType.ListTemplate:\n      return prepareEmptyListTemplate();\n    case TemplateType.IdTemplate:\n      return prepareEmptyIdTemplate();\n    case TemplateType.StateTemplate:\n      return prepareEmptyStateTemplate();\n    case TemplateType.DefinitionRefTemplate:\n      return prepareEmptyDefinitionRefTemplate();\n    case TemplateType.MetaPrimitiveValueTemplate:\n      return prepareEmptyMetaPrimitiveValueTemplate();\n  }\n};\n","/home/piotr/Projects/SmartLaw/frontend/src/model/TextEngineTemplate.ts",["515"],"/home/piotr/Projects/SmartLaw/frontend/src/index.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/utils/ListUtils.ts",[],["516","517"],"/home/piotr/Projects/SmartLaw/frontend/src/model/ExtendedRuleInvocationPresentationElement.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/model/NaturalLanguageProvision.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/service/RuleService.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/model/Id.ts",[],["518","519"],"/home/piotr/Projects/SmartLaw/frontend/src/model/StaticTemplate.ts",["520","521"],"import Template, { TemplateType } from \"./Template\";\nimport TextEngineTemplate, { TextEngineType } from \"./TextEngineTemplate\";\n\nexport const decodeStaticTemplate = <T>(json: any, decodeTemplateResult: (json: any) => T): StaticTemplate<T> => {\n  return {\n    templateType: TemplateType.Static,\n    value: decodeTemplateResult(json.value),\n  };\n};\n\nexport default interface StaticTemplate<T> extends Template<T> {\n  value: T;\n}\n\nexport const isStaticTemplate = <T>(template: Template<T>): template is StaticTemplate<T> => {\n  return template.templateType === TemplateType.Static;\n};\n\nexport const prepareStaticTemplate = <T>(value: T): StaticTemplate<T> => {\n  return {\n    templateType: TemplateType.Static,\n    value: value,\n  };\n};\n\nexport const prepareEmptyStaticTemplate = (): StaticTemplate<any> => {\n  return {\n    templateType: TemplateType.Static,\n    value: \"\",\n  };\n};\n","/home/piotr/Projects/SmartLaw/frontend/src/model/AnnotationType.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/model/Library.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/service/ProjectService.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/model/Document.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/utils/Decoders.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/model/ExtendedPresentationElement.ts",["522"],"import PresentationElement from \"./PresentationElement\";\nimport { decodeExtendedSectionPresentationElement } from \"./ExtendedSectionPresentationElement\";\nimport { decodeExtendedRuleInvocationPresentationElement } from \"./ExtendedRuleInvocationPresentationElement\";\n\nexport const decodeExtendedPresentationElement = <T extends PresentationElement>(json: any): ExtendedPresentationElement => {\n  switch (json.type) {\n    case \"Section\":\n      return decodeExtendedSectionPresentationElement(json);\n    case \"RuleInvocation\":\n      return decodeExtendedRuleInvocationPresentationElement(json);\n    default:\n      throw Error(\"ExtendedPresentationElement type \" + json.type + \" is not supported\");\n  }\n};\n\nexport interface ExtendedPresentationElement {\n  presentationElement: PresentationElement;\n}\n","/home/piotr/Projects/SmartLaw/frontend/src/model/MetaArgument.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/component/presentation-element/SectionPresentationElementView.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/component/template/TextEngineTemplateEditor.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/component/template/StaticTemplateEditor.tsx",["523"],"import StaticTemplate from \"../../model/StaticTemplate\";\nimport { Form } from \"react-bootstrap\";\nimport React from \"react\";\n\ninterface StaticTemplateEditorProps {\n  template: StaticTemplate<any>;\n  onTemplateChange: (template: StaticTemplate<any>) => void;\n}\n\nconst StaticTemplateEditor = <T,>({ template, onTemplateChange }: StaticTemplateEditorProps) => {\n  return (\n    <Form.Group>\n      <Form.Label>Content</Form.Label>\n      <Form.Control\n        type=\"text\"\n        value={template.value.toString()}\n        onChange={(event) => onTemplateChange({ ...template, value: event.target.value })}\n      />\n    </Form.Group>\n  );\n};\n\nexport default StaticTemplateEditor;\n","/home/piotr/Projects/SmartLaw/frontend/src/common/SelectField.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/model/SectionPresentationElement.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/component/presentation-element/PresentationElementView.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/component/rule/RuleArgumentListEditor.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/model/OutputMessage.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/model/ValidationResult.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/component/template/TemplateEditor.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/component/rule/RuleEditor.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/component/RuleBrowser.tsx",["524"],"import React, { useEffect, useState } from \"react\";\nimport { Card, Form } from \"react-bootstrap\";\nimport { Draggable, Droppable } from \"react-beautiful-dnd\";\nimport Id from \"../model/Id\";\nimport { searchRules } from \"../service/RuleService\";\nimport { List } from \"immutable\";\nimport Rule from \"../model/Rule\";\n\nexport interface RuleBrowserProps {\n  projectId: string;\n  searchResult: List<Rule>;\n  onSearchResultChange: (searchResult: List<Rule>) => void;\n}\n\nconst convertIdToString = (id: Id): string => {\n  if (id.namespace) {\n    return id.namespace + \".\" + id.id;\n  } else {\n    return id.id;\n  }\n};\n\nconst RuleBrowser = ({ projectId, searchResult, onSearchResultChange }: RuleBrowserProps) => {\n  const [searchPhrase, setSearchPhrase] = useState(\"\");\n  useEffect(() => {\n    let isSubscribed = true;\n    searchRules({ searchPhrase, projectId }).then((rules) => {\n      if (isSubscribed) {\n        onSearchResultChange(rules);\n      }\n    });\n\n    return () => {\n      isSubscribed = false;\n    };\n  }, [searchPhrase]);\n\n  return (\n    <div>\n      <div style={{ marginBottom: \"15px\" }}>\n        <Form.Control\n          type=\"text\"\n          placeholder=\"Search phrase\"\n          value={searchPhrase}\n          onChange={(event) => setSearchPhrase(event.target.value)}\n        />\n      </div>\n      <div style={{ height: \"400px\", overflowY: \"auto\" }}>\n        <Droppable droppableId=\"search\" type=\"nested\">\n          {(provided, snapshot) => (\n            <div {...provided.droppableProps} ref={provided.innerRef}>\n              {searchResult.map((rule, index) => (\n                <Draggable key={convertIdToString(rule.id)} draggableId={convertIdToString(rule.id)} index={index}>\n                  {(provided, snapshot) => (\n                    <div ref={provided.innerRef} {...provided.draggableProps} style={provided.draggableProps.style}>\n                      <div {...provided.dragHandleProps}>\n                        <Card body>{rule.name}</Card>\n                      </div>\n                    </div>\n                  )}\n                </Draggable>\n              ))}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </div>\n    </div>\n  );\n};\n\nexport default RuleBrowser;\n",["525","526"],"/home/piotr/Projects/SmartLaw/frontend/src/model/Element.ts",[],["527","528"],"/home/piotr/Projects/SmartLaw/frontend/src/component/rule/RuleArgumentEditor.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/model/Annotation.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/service/Types.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/utils/Hooks.ts",["529","530"],"import { DependencyList, useEffect } from \"react\";\n\nexport const useFetchedData = <T>(fetch: () => Promise<T>, action: (data: T) => void, deps?: DependencyList) => {\n  useEffect(() => {\n    let isSubscribed = true;\n    fetch().then((data) => {\n      if (isSubscribed) {\n        action(data);\n      }\n    });\n\n    return () => {\n      isSubscribed = false;\n    };\n  }, deps);\n};\n","/home/piotr/Projects/SmartLaw/frontend/src/component/presentation-element/RuleInvocationView.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/model/Rule.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/model/Type.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/model/DefinitionRef.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/component/IdField.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/common/TextField.tsx",["531"],"import { Form } from \"react-bootstrap\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDebounce } from \"use-debounce\";\n\ninterface TextFieldProps {\n  label?: string;\n  placeholder?: string;\n  value: string;\n  onChange?: (value: string) => void;\n  onBlur?: () => void;\n  disabled?: boolean;\n}\n\nconst TextField = ({ label, placeholder, value, onChange, onBlur, disabled }: TextFieldProps) => {\n  const [currentValue, setCurrentValue] = useState(value);\n  const [debouncedValue] = useDebounce(currentValue, 500);\n  useEffect(() => setCurrentValue(value), [value]);\n  useEffect(() => onChange && onChange(debouncedValue), [debouncedValue]);\n\n  return (\n    <Form.Group>\n      {label && <Form.Label>{label}</Form.Label>}\n      <Form.Control\n        type=\"text\"\n        placeholder={placeholder}\n        value={currentValue}\n        onChange={(event) => setCurrentValue(event.target.value)}\n        disabled={disabled}\n        onBlur={onBlur}\n      />\n    </Form.Group>\n  );\n};\n\nexport default TextField;\n","/home/piotr/Projects/SmartLaw/frontend/src/component/element/StateElementEditor.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/model/StateElement.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/component/element/ElementEditor.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/component/rule/RuleListEditor.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/common/ListEditor.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/component/element/ElementListEditor.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/component/rule/RuleInterfaceEditor.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/common/AddButton.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/component/rule/ImplementedRuleInterfacesSelector.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/component/rule/RuleInterfaceSelectorPopup.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/common/ExpandableArea.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/component/rule/RuleInterfaceListEditor.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/component/rule/RuleContentEditor.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/model/ExtendedSectionPresentationElement.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/model/RuleInterface.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/model/GroovyTemplate.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/model/MetaRuleValue.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/component/rule/RuleSelectorPopup.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/context/ProjectContext.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/component/rule-invocation/RuleInvocationPresentationView.tsx",[],["532","533"],"/home/piotr/Projects/SmartLaw/frontend/src/component/rule-invocation/RuleInvocationArgumentValueEditor.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/component/rule-invocation/RuleInvocationArgumentRuleValueEditor.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/App.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/common/SelectorPopup.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/component/rule-invocation/RuleInvocationArgumentLocalDateValueEditor.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/common/NumberField.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/model/Project.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/page/ProjectsManagerPage.tsx",["534"],"import { useHistory } from \"react-router-dom\";\nimport Browser from \"../common/Browser\";\nimport { searchProjects } from \"../service/ProjectService\";\nimport { Button, Container } from \"react-bootstrap\";\n\ninterface ProjectsManagerPageProps {}\n\nconst ProjectsManagerPage = ({}: ProjectsManagerPageProps) => {\n  let history = useHistory();\n\n  return (\n    <Container style={{ paddingTop: \"30px\" }}>\n      <Button onClick={() => history.push(\"/projects/new\")}>Create new project</Button>\n      <div style={{ marginTop: \"30px\" }}>\n        <Browser\n          placeholder=\"Search project by name\"\n          search={searchProjects}\n          display={(project) => <div>{project.name}</div>}\n          onSelect={(project) => {\n            history.push(\"/projects/\" + project.id);\n          }}\n        />\n      </div>\n    </Container>\n  );\n};\n\nexport default ProjectsManagerPage;\n","/home/piotr/Projects/SmartLaw/frontend/src/common/Browser.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/page/ProjectEditorPage.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/component/rule-invocation/RuleInvocationEditor.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/component/rule-invocation/RuleInvocationArgumentStringValueEditor.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/common/SelectorButtonField.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/component/rule-invocation/RuleInvocationArgumentEditor.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/component/rule-invocation/RuleInvocationArgumentIntegerValueEditor.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/page/CreateProjectPage.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/model/Validator.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/model/RegexValidator.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/component/validator/ValidatorEditor.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/component/validator/NumberRangeValidatorEditor.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/component/rule-invocation/RuleInvocationArgumentListEditor.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/model/NumberRangeValidator.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/component/rule/RuleArgumentValidatorListEditor.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/component/rule-invocation/RuleInvocationValidationResults.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/model/GenericValidator.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/component/validator/RegexValidatorEditor.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/common/EditableTextField.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/component/element/type/DefinitionRefEditor.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/component/element/type/TypeEditor.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/component/template/GroovyTemplateEditor.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/model/GenericType.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/component/validator/GenericValidatorEditor.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/model/InterfaceRef.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/model/ListTemplate.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/component/element/template/ElementListTemplateEditor.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/component/element/template/ListTemplateEditor.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/component/element/template/StateTemplateEditor.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/model/IdTemplate.ts",["535"],"import { decodeNullable, decodeString } from \"../utils/Decoders\";\nimport Template, { decodeTemplate, TemplateType } from \"./Template\";\nimport Id from \"./Id\";\nimport { prepareStaticTemplate } from \"./StaticTemplate\";\n\nexport const decodeIdTemplate = (json: any): IdTemplate => {\n  return {\n    templateType: TemplateType.IdTemplate,\n    id: decodeTemplate(json.id, decodeString),\n    namespace: decodeTemplate(json.namespace, (json) => decodeNullable(json, decodeString)),\n  };\n};\n\nexport default interface IdTemplate extends Template<Id> {\n  id: Template<string>;\n  namespace: Template<string | null>;\n}\n\nexport const prepareEmptyIdTemplate = (): IdTemplate => {\n  return {\n    templateType: TemplateType.IdTemplate,\n    id: prepareStaticTemplate(\"\"),\n    namespace: prepareStaticTemplate(null),\n  };\n};\n\nexport const isIdTemplate = <T>(template: Template<Id>): template is IdTemplate => {\n  return template.templateType === TemplateType.IdTemplate;\n};\n","/home/piotr/Projects/SmartLaw/frontend/src/component/element/template/StringTemplateEditor.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/model/StateTemplate.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/model/DefinitionRefTemplate.ts",["536"],"import Type, { decodeType } from \"./Type\";\nimport Id, { decodeId } from \"./Id\";\nimport { List } from \"immutable\";\nimport { decodeList } from \"../utils/Decoders\";\nimport Template, { decodeTemplate, TemplateType } from \"./Template\";\nimport DefinitionRef from \"./DefinitionRef\";\nimport { prepareEmptyIdTemplate } from \"./IdTemplate\";\nimport { prepareEmptyListTemplate } from \"./ListTemplate\";\n\nexport const decodeDefinitionRefTemplate = (json: any): DefinitionRefTemplate => {\n  return {\n    templateType: TemplateType.DefinitionRefTemplate,\n    definition: decodeTemplate(json.definition, decodeId),\n    parameters: decodeTemplate(json.parameters, (json) => decodeList(json, decodeType)),\n  };\n};\n\nexport default interface DefinitionRefTemplate extends Template<DefinitionRef> {\n  definition: Template<Id>;\n  parameters: Template<List<Type>>;\n}\n\nexport const prepareEmptyDefinitionRefTemplate = (): DefinitionRefTemplate => {\n  return {\n    templateType: TemplateType.DefinitionRefTemplate,\n    definition: prepareEmptyIdTemplate(),\n    parameters: prepareEmptyListTemplate(),\n  };\n};\n\nexport const isDefinitionRefTemplate = <T>(template: Template<Type>): template is DefinitionRefTemplate => {\n  return template.templateType === TemplateType.DefinitionRefTemplate;\n};\n","/home/piotr/Projects/SmartLaw/frontend/src/component/element/template/DefinitionRefTemplateEditor.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/component/element/template/TypeTemplateEditor.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/component/element/template/IdTemplateEditor.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/component/element/template/MetaPrimitiveValueTemplateEditor.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/service/MetaTypes.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/model/MetaPrimitiveValueTemplate.ts",[],{"ruleId":"537","replacedBy":"538"},{"ruleId":"539","replacedBy":"540"},{"ruleId":"541","severity":1,"message":"542","line":92,"column":25,"nodeType":"543","messageId":"544","endLine":92,"endColumn":26},{"ruleId":"545","severity":1,"message":"546","line":114,"column":6,"nodeType":"547","endLine":114,"endColumn":8,"suggestions":"548"},{"ruleId":"545","severity":1,"message":"549","line":133,"column":6,"nodeType":"547","endLine":133,"endColumn":44,"suggestions":"550"},{"ruleId":"537","replacedBy":"551"},{"ruleId":"539","replacedBy":"552"},{"ruleId":"537","replacedBy":"553"},{"ruleId":"539","replacedBy":"554"},{"ruleId":"541","severity":1,"message":"555","line":4,"column":10,"nodeType":"543","messageId":"544","endLine":4,"endColumn":14},{"ruleId":"537","replacedBy":"556"},{"ruleId":"539","replacedBy":"557"},{"ruleId":"537","replacedBy":"558"},{"ruleId":"539","replacedBy":"559"},{"ruleId":"541","severity":1,"message":"560","line":45,"column":35,"nodeType":"543","messageId":"544","endLine":45,"endColumn":36},{"ruleId":"541","severity":1,"message":"560","line":8,"column":42,"nodeType":"543","messageId":"544","endLine":8,"endColumn":43},{"ruleId":"537","replacedBy":"561"},{"ruleId":"539","replacedBy":"562"},{"ruleId":"537","replacedBy":"563"},{"ruleId":"539","replacedBy":"564"},{"ruleId":"541","severity":1,"message":"565","line":2,"column":8,"nodeType":"543","messageId":"544","endLine":2,"endColumn":26},{"ruleId":"541","severity":1,"message":"566","line":2,"column":30,"nodeType":"543","messageId":"544","endLine":2,"endColumn":44},{"ruleId":"541","severity":1,"message":"560","line":5,"column":51,"nodeType":"543","messageId":"544","endLine":5,"endColumn":52},{"ruleId":"541","severity":1,"message":"560","line":10,"column":31,"nodeType":"543","messageId":"544","endLine":10,"endColumn":32},{"ruleId":"545","severity":1,"message":"567","line":36,"column":6,"nodeType":"547","endLine":36,"endColumn":20,"suggestions":"568"},{"ruleId":"537","replacedBy":"569"},{"ruleId":"539","replacedBy":"570"},{"ruleId":"537","replacedBy":"571"},{"ruleId":"539","replacedBy":"572"},{"ruleId":"545","severity":1,"message":"573","line":15,"column":6,"nodeType":"543","endLine":15,"endColumn":10},{"ruleId":"545","severity":1,"message":"574","line":15,"column":6,"nodeType":"543","endLine":15,"endColumn":10,"suggestions":"575"},{"ruleId":"545","severity":1,"message":"576","line":18,"column":57,"nodeType":"547","endLine":18,"endColumn":73,"suggestions":"577"},{"ruleId":"537","replacedBy":"578"},{"ruleId":"539","replacedBy":"579"},{"ruleId":"580","severity":1,"message":"581","line":8,"column":30,"nodeType":"582","messageId":"583","endLine":8,"endColumn":58},{"ruleId":"541","severity":1,"message":"560","line":27,"column":30,"nodeType":"543","messageId":"544","endLine":27,"endColumn":31},{"ruleId":"541","severity":1,"message":"560","line":31,"column":41,"nodeType":"543","messageId":"544","endLine":31,"endColumn":42},"no-native-reassign",["584"],"no-negated-in-lhs",["585"],"@typescript-eslint/no-unused-vars","'_' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'contractDbId', 'mergeDocumentEditorElementsAndExtendedPresentationElements', and 'projectId'. Either include them or remove the dependency array.","ArrayExpression",["586"],"React Hook useEffect has missing dependencies: 'mergeDocumentEditorElementsAndExtendedPresentationElements' and 'projectId'. Either include them or remove the dependency array.",["587"],["584"],["585"],["584"],["585"],"'List' is defined but never used.",["584"],["585"],["584"],["585"],"'T' is defined but never used.",["584"],["585"],["584"],["585"],"'TextEngineTemplate' is defined but never used.","'TextEngineType' is defined but never used.","React Hook useEffect has missing dependencies: 'onSearchResultChange' and 'projectId'. Either include them or remove the dependency array. If 'onSearchResultChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["588"],["584"],["585"],["584"],["585"],"React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook useEffect has missing dependencies: 'action' and 'fetch'. Either include them or remove the dependency array. If 'fetch' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["589"],"React Hook useEffect has a missing dependency: 'onChange'. Either include it or remove the dependency array. If 'onChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["590"],["584"],["585"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-global-assign","no-unsafe-negation",{"desc":"591","fix":"592"},{"desc":"593","fix":"594"},{"desc":"595","fix":"596"},{"desc":"597","fix":"598"},{"desc":"599","fix":"600"},"Update the dependencies array to be: [contractDbId, mergeDocumentEditorElementsAndExtendedPresentationElements, projectId]",{"range":"601","text":"602"},"Update the dependencies array to be: [mergeDocumentEditorElementsAndExtendedPresentationElements, presentationElementsPendingExtending, projectId]",{"range":"603","text":"604"},"Update the dependencies array to be: [onSearchResultChange, projectId, searchPhrase]",{"range":"605","text":"606"},"Update the dependencies array to be: [action, fetch]",{"range":"607","text":"608"},"Update the dependencies array to be: [debouncedValue, onChange]",{"range":"609","text":"610"},[5129,5131],"[contractDbId, mergeDocumentEditorElementsAndExtendedPresentationElements, projectId]",[5722,5760],"[mergeDocumentEditorElementsAndExtendedPresentationElements, presentationElementsPendingExtending, projectId]",[1007,1021],"[onSearchResultChange, projectId, searchPhrase]",[368,372],"[action, fetch]",[634,650],"[debouncedValue, onChange]"]