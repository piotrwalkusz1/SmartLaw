[{"/home/piotr/Projects/SmartLaw/frontend/src/page/RootPage.tsx":"1","/home/piotr/Projects/SmartLaw/frontend/src/page/ContractPage.tsx":"2","/home/piotr/Projects/SmartLaw/frontend/src/page/LibraryPage.tsx":"3","/home/piotr/Projects/SmartLaw/frontend/src/reportWebVitals.ts":"4","/home/piotr/Projects/SmartLaw/frontend/src/service/DocumentService.ts":"5","/home/piotr/Projects/SmartLaw/frontend/src/context/DocumentEditorContext.ts":"6","/home/piotr/Projects/SmartLaw/frontend/src/utils/AtomicInteger.ts":"7","/home/piotr/Projects/SmartLaw/frontend/src/model/MetaValue.ts":"8","/home/piotr/Projects/SmartLaw/frontend/src/model/RuleInvocationPresentationElement.ts":"9","/home/piotr/Projects/SmartLaw/frontend/src/model/Contract.ts":"10","/home/piotr/Projects/SmartLaw/frontend/src/model/PresentationElement.ts":"11","/home/piotr/Projects/SmartLaw/frontend/src/model/RuleInvocation.ts":"12","/home/piotr/Projects/SmartLaw/frontend/src/model/MetaPrimitiveValue.ts":"13","/home/piotr/Projects/SmartLaw/frontend/src/model/ExtendPresentationElementsResultDto.ts":"14","/home/piotr/Projects/SmartLaw/frontend/src/model/Template.ts":"15","/home/piotr/Projects/SmartLaw/frontend/src/model/TextEngineTemplate.ts":"16","/home/piotr/Projects/SmartLaw/frontend/src/index.tsx":"17","/home/piotr/Projects/SmartLaw/frontend/src/utils/ListUtils.ts":"18","/home/piotr/Projects/SmartLaw/frontend/src/model/ExtendedRuleInvocationPresentationElement.ts":"19","/home/piotr/Projects/SmartLaw/frontend/src/model/NaturalLanguageProvision.ts":"20","/home/piotr/Projects/SmartLaw/frontend/src/service/RuleService.ts":"21","/home/piotr/Projects/SmartLaw/frontend/src/model/Id.ts":"22","/home/piotr/Projects/SmartLaw/frontend/src/model/StaticTemplate.ts":"23","/home/piotr/Projects/SmartLaw/frontend/src/model/AnnotationType.ts":"24","/home/piotr/Projects/SmartLaw/frontend/src/model/Library.ts":"25","/home/piotr/Projects/SmartLaw/frontend/src/service/ProjectService.ts":"26","/home/piotr/Projects/SmartLaw/frontend/src/model/Document.ts":"27","/home/piotr/Projects/SmartLaw/frontend/src/utils/Decoders.ts":"28","/home/piotr/Projects/SmartLaw/frontend/src/model/ExtendedPresentationElement.ts":"29","/home/piotr/Projects/SmartLaw/frontend/src/model/MetaArgument.ts":"30","/home/piotr/Projects/SmartLaw/frontend/src/component/presentation-element/SectionPresentationElementView.tsx":"31","/home/piotr/Projects/SmartLaw/frontend/src/component/template/TextEngineTemplateEditor.tsx":"32","/home/piotr/Projects/SmartLaw/frontend/src/component/template/StaticTemplateEditor.tsx":"33","/home/piotr/Projects/SmartLaw/frontend/src/common/SelectField.tsx":"34","/home/piotr/Projects/SmartLaw/frontend/src/model/SectionPresentationElement.ts":"35","/home/piotr/Projects/SmartLaw/frontend/src/component/presentation-element/PresentationElementView.tsx":"36","/home/piotr/Projects/SmartLaw/frontend/src/component/rule/RuleArgumentListEditor.tsx":"37","/home/piotr/Projects/SmartLaw/frontend/src/model/OutputMessage.ts":"38","/home/piotr/Projects/SmartLaw/frontend/src/model/ValidationResult.ts":"39","/home/piotr/Projects/SmartLaw/frontend/src/component/template/TemplateEditor.tsx":"40","/home/piotr/Projects/SmartLaw/frontend/src/component/rule/RuleEditor.tsx":"41","/home/piotr/Projects/SmartLaw/frontend/src/component/RuleBrowser.tsx":"42","/home/piotr/Projects/SmartLaw/frontend/src/model/Element.ts":"43","/home/piotr/Projects/SmartLaw/frontend/src/component/rule/RuleArgumentEditor.tsx":"44","/home/piotr/Projects/SmartLaw/frontend/src/model/Annotation.ts":"45","/home/piotr/Projects/SmartLaw/frontend/src/service/Types.ts":"46","/home/piotr/Projects/SmartLaw/frontend/src/utils/Hooks.ts":"47","/home/piotr/Projects/SmartLaw/frontend/src/component/presentation-element/RuleInvocationView.tsx":"48","/home/piotr/Projects/SmartLaw/frontend/src/model/Rule.ts":"49","/home/piotr/Projects/SmartLaw/frontend/src/model/Type.ts":"50","/home/piotr/Projects/SmartLaw/frontend/src/model/DefinitionRef.ts":"51","/home/piotr/Projects/SmartLaw/frontend/src/component/element/ElementListTemplateEditor.tsx":"52","/home/piotr/Projects/SmartLaw/frontend/src/component/IdField.tsx":"53","/home/piotr/Projects/SmartLaw/frontend/src/common/TextField.tsx":"54","/home/piotr/Projects/SmartLaw/frontend/src/component/element/ElementListStaticTemplateEditor.tsx":"55","/home/piotr/Projects/SmartLaw/frontend/src/component/element/StateElementEditor.tsx":"56","/home/piotr/Projects/SmartLaw/frontend/src/model/StateElement.ts":"57","/home/piotr/Projects/SmartLaw/frontend/src/component/element/ElementEditor.tsx":"58","/home/piotr/Projects/SmartLaw/frontend/src/component/rule/RuleListEditor.tsx":"59","/home/piotr/Projects/SmartLaw/frontend/src/common/ListEditor.tsx":"60","/home/piotr/Projects/SmartLaw/frontend/src/component/element/ElementListEditor.tsx":"61","/home/piotr/Projects/SmartLaw/frontend/src/component/rule/RuleInterfaceEditor.tsx":"62","/home/piotr/Projects/SmartLaw/frontend/src/common/AddButton.tsx":"63"},{"size":851,"mtime":1609946469110,"results":"64","hashOfConfig":"65"},{"size":16418,"mtime":1613395151146,"results":"66","hashOfConfig":"65"},{"size":1712,"mtime":1613427738668,"results":"67","hashOfConfig":"65"},{"size":425,"mtime":1606677110600,"results":"68","hashOfConfig":"65"},{"size":463,"mtime":1613333239289,"results":"69","hashOfConfig":"65"},{"size":221,"mtime":1607173676313,"results":"70","hashOfConfig":"65"},{"size":109,"mtime":1607185036736,"results":"71","hashOfConfig":"65"},{"size":441,"mtime":1606925494119,"results":"72","hashOfConfig":"65"},{"size":1110,"mtime":1607210687305,"results":"73","hashOfConfig":"65"},{"size":782,"mtime":1607071340500,"results":"74","hashOfConfig":"65"},{"size":784,"mtime":1607192657278,"results":"75","hashOfConfig":"65"},{"size":450,"mtime":1606856941405,"results":"76","hashOfConfig":"65"},{"size":384,"mtime":1606928918898,"results":"77","hashOfConfig":"65"},{"size":972,"mtime":1607438052327,"results":"78","hashOfConfig":"65"},{"size":763,"mtime":1613302500070,"results":"79","hashOfConfig":"65"},{"size":516,"mtime":1613313223195,"results":"80","hashOfConfig":"65"},{"size":547,"mtime":1607112291920,"results":"81","hashOfConfig":"65"},{"size":281,"mtime":1607174191273,"results":"82","hashOfConfig":"65"},{"size":2268,"mtime":1607368826633,"results":"83","hashOfConfig":"65"},{"size":464,"mtime":1607187157261,"results":"84","hashOfConfig":"65"},{"size":438,"mtime":1607278609767,"results":"85","hashOfConfig":"65"},{"size":536,"mtime":1613408950670,"results":"86","hashOfConfig":"65"},{"size":428,"mtime":1613396146318,"results":"87","hashOfConfig":"65"},{"size":1069,"mtime":1609947567371,"results":"88","hashOfConfig":"65"},{"size":2023,"mtime":1613407241823,"results":"89","hashOfConfig":"65"},{"size":1047,"mtime":1607632203094,"results":"90","hashOfConfig":"65"},{"size":554,"mtime":1612990404123,"results":"91","hashOfConfig":"65"},{"size":1606,"mtime":1609882918018,"results":"92","hashOfConfig":"65"},{"size":795,"mtime":1607193095050,"results":"93","hashOfConfig":"65"},{"size":515,"mtime":1607114433082,"results":"94","hashOfConfig":"65"},{"size":3090,"mtime":1613236253940,"results":"95","hashOfConfig":"65"},{"size":695,"mtime":1613236920002,"results":"96","hashOfConfig":"65"},{"size":657,"mtime":1613236531923,"results":"97","hashOfConfig":"65"},{"size":856,"mtime":1613239889984,"results":"98","hashOfConfig":"65"},{"size":734,"mtime":1607192657254,"results":"99","hashOfConfig":"65"},{"size":1590,"mtime":1613236253952,"results":"100","hashOfConfig":"65"},{"size":1583,"mtime":1613408482325,"results":"101","hashOfConfig":"65"},{"size":499,"mtime":1607437780486,"results":"102","hashOfConfig":"65"},{"size":342,"mtime":1607368826653,"results":"103","hashOfConfig":"65"},{"size":2488,"mtime":1613332321945,"results":"104","hashOfConfig":"65"},{"size":1380,"mtime":1613428024975,"results":"105","hashOfConfig":"65"},{"size":2234,"mtime":1607627231312,"results":"106","hashOfConfig":"65"},{"size":570,"mtime":1613340984341,"results":"107","hashOfConfig":"65"},{"size":1076,"mtime":1613410065122,"results":"108","hashOfConfig":"65"},{"size":595,"mtime":1609947374768,"results":"109","hashOfConfig":"65"},{"size":521,"mtime":1613410065110,"results":"110","hashOfConfig":"65"},{"size":378,"mtime":1613236190855,"results":"111","hashOfConfig":"65"},{"size":5935,"mtime":1613236190867,"results":"112","hashOfConfig":"65"},{"size":889,"mtime":1609884404800,"results":"113","hashOfConfig":"65"},{"size":404,"mtime":1613410065150,"results":"114","hashOfConfig":"65"},{"size":673,"mtime":1613410065098,"results":"115","hashOfConfig":"65"},{"size":1187,"mtime":1613379820502,"results":"116","hashOfConfig":"65"},{"size":914,"mtime":1613393068758,"results":"117","hashOfConfig":"65"},{"size":511,"mtime":1613392967392,"results":"118","hashOfConfig":"65"},{"size":828,"mtime":1613393919649,"results":"119","hashOfConfig":"65"},{"size":637,"mtime":1613394753129,"results":"120","hashOfConfig":"65"},{"size":880,"mtime":1613394724936,"results":"121","hashOfConfig":"65"},{"size":637,"mtime":1613394775061,"results":"122","hashOfConfig":"65"},{"size":1017,"mtime":1613408012683,"results":"123","hashOfConfig":"65"},{"size":1120,"mtime":1613408012703,"results":"124","hashOfConfig":"65"},{"size":1268,"mtime":1613410065134,"results":"125","hashOfConfig":"65"},{"size":975,"mtime":1613427261162,"results":"126","hashOfConfig":"65"},{"size":577,"mtime":1613395151158,"results":"127","hashOfConfig":"65"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},"1t9sslt",{"filePath":"131","messages":"132","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"134"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"149"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"134"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"134"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/piotr/Projects/SmartLaw/frontend/src/page/RootPage.tsx",[],["264","265"],"/home/piotr/Projects/SmartLaw/frontend/src/page/ContractPage.tsx",["266","267","268","269","270"],"/** @jsxImportSource @emotion/react */\nimport React, { useEffect, useState } from \"react\";\nimport Contract from \"../model/Contract\";\nimport * as DocumentService from \"../service/DocumentService\";\nimport { saveDocument } from \"../service/DocumentService\";\nimport PresentationElementView from \"../component/presentation-element/PresentationElementView\";\nimport { DocumentEditorContext } from \"../context/DocumentEditorContext\";\nimport { downloadDocument, extendPresentationElements } from \"../service/ProjectService\";\nimport { Button, Card, Col, Row } from \"react-bootstrap\";\nimport { css } from \"@emotion/react\";\nimport { DragDropContext, Draggable, Droppable, DropResult } from \"react-beautiful-dnd\";\nimport { List } from \"immutable\";\nimport { AtomicInteger } from \"../utils/AtomicInteger\";\nimport { ExtendedSectionPresentationElement } from \"../model/ExtendedSectionPresentationElement\";\nimport { ExtendedRuleInvocationPresentationElement } from \"../model/ExtendedRuleInvocationPresentationElement\";\nimport { ExtendedPresentationElement } from \"../model/ExtendedPresentationElement\";\nimport { moveItemInList } from \"../utils/ListUtils\";\nimport MetaValue, { MetaValueType } from \"../model/MetaValue\";\nimport PresentationElement from \"../model/PresentationElement\";\nimport SectionPresentationElement from \"../model/SectionPresentationElement\";\nimport RuleInvocationPresentationElement from \"../model/RuleInvocationPresentationElement\";\nimport RuleBrowser from \"../component/RuleBrowser\";\nimport Rule from \"../model/Rule\";\nimport NaturalLanguageProvision from \"../model/NaturalLanguageProvision\";\nimport { OutputMessage } from \"../model/OutputMessage\";\nimport MetaPrimitiveValue from \"../model/MetaPrimitiveValue\";\nimport { PlusSquare } from \"react-bootstrap-icons\";\nimport Id from \"../model/Id\";\nimport { DocumentType } from \"../model/Document\";\nimport AddButton from \"../common/AddButton\";\n\nconst Style = {\n  title: css`\n    text-align: center;\n    font-size: 20px;\n    font-weight: bold;\n    padding: 10px 0;\n  `,\n};\n\nexport class DocumentEditorElement {\n  id: string;\n\n  protected constructor(id: string) {\n    this.id = id;\n  }\n}\n\nexport class DocumentEditorSectionElement extends DocumentEditorElement {\n  title: string;\n  documentEditorElements: List<DocumentEditorElement>;\n\n  constructor(id: string, title: string, documentEditorElements: List<DocumentEditorElement>) {\n    super(id);\n    this.title = title;\n    this.documentEditorElements = documentEditorElements;\n  }\n\n  withDocumentEditorElements(documentEditorElements: List<DocumentEditorElement>): DocumentEditorSectionElement {\n    return new DocumentEditorSectionElement(this.id, this.title, documentEditorElements);\n  }\n}\n\nexport class DocumentEditorRuleInvocationElement extends DocumentEditorElement {\n  extendedPresentationElement: ExtendedRuleInvocationPresentationElement;\n\n  constructor(id: string, extendedPresentationElement: ExtendedRuleInvocationPresentationElement) {\n    super(id);\n    this.extendedPresentationElement = extendedPresentationElement;\n  }\n\n  withRuleInvocationArguments(ruleInvocationArguments: List<MetaValue>): DocumentEditorRuleInvocationElement {\n    return this.withExtendedPresentationElement(this.extendedPresentationElement.withRuleInvocationArguments(ruleInvocationArguments));\n  }\n\n  withExtendedPresentationElement(\n    extendedPresentationElement: ExtendedRuleInvocationPresentationElement\n  ): DocumentEditorRuleInvocationElement {\n    return new DocumentEditorRuleInvocationElement(this.id, extendedPresentationElement);\n  }\n}\n\nconst ContractPage = () => {\n  const contractDbId = \"2\";\n  const projectId = \"1\";\n  const [contractId, setContractId] = useState<Id | undefined>(undefined);\n  const [contractName, setContractName] = useState<string | undefined>(undefined);\n  const [contractDescription, setContractDescription] = useState<string | null>(null);\n  const [elements, setElements] = useState<List<DocumentEditorElement> | undefined>(undefined);\n  const [presentationElementsPendingExtending, setPresentationElementsExtending] = useState<List<PresentationElement> | undefined>(\n    undefined\n  );\n  const [nextElementId, _] = useState(new AtomicInteger());\n  const [rulesSearchResult, setRulesSearchResult] = useState<List<Rule>>(List());\n  const [outputMessages, setOutputMessages] = useState<List<OutputMessage>>(List());\n  useEffect(() => {\n    let isSubscribed = true;\n    DocumentService.getDocument<Contract>(contractDbId).then((contract) => {\n      extendPresentationElements(projectId, contract.presentationElements).then((result) => {\n        if (isSubscribed) {\n          setContractId(contract.id);\n          setContractName(contract.name);\n          setContractDescription(contract.description);\n          setElements((oldElements) =>\n            mergeDocumentEditorElementsAndExtendedPresentationElements(result.extendedPresentationElements, oldElements)\n          );\n          setOutputMessages(result.outputMessages);\n        }\n      });\n    });\n\n    return () => {\n      isSubscribed = false;\n    };\n  }, []);\n  useEffect(() => {\n    if (presentationElementsPendingExtending === undefined) {\n      return;\n    }\n    let isSubscribed = true;\n\n    extendPresentationElements(projectId, presentationElementsPendingExtending).then((result) => {\n      if (isSubscribed) {\n        setElements((oldElements) =>\n          mergeDocumentEditorElementsAndExtendedPresentationElements(result.extendedPresentationElements, oldElements)\n        );\n        setOutputMessages(result.outputMessages);\n      }\n    });\n\n    return () => {\n      isSubscribed = false;\n    };\n  }, [presentationElementsPendingExtending]);\n\n  const refreshElements = (elements: List<DocumentEditorElement>): void => {\n    const presentationElements = extractPresentationElementsFromDocumentEditorElements(elements);\n    setElements(elements);\n    setPresentationElementsExtending(presentationElements);\n  };\n\n  const extractPresentationElementsFromDocumentEditorElements = (elements: List<DocumentEditorElement>): List<PresentationElement> => {\n    return elements.map((element) => extractPresentationElementFromDocumentEditorElement(element));\n  };\n\n  const extractPresentationElementFromDocumentEditorElement = (element: DocumentEditorElement): PresentationElement => {\n    if (element instanceof DocumentEditorSectionElement) {\n      return new SectionPresentationElement(extractPresentationElementsFromDocumentEditorElements(element.documentEditorElements));\n    } else if (element instanceof DocumentEditorRuleInvocationElement) {\n      return new RuleInvocationPresentationElement(element.extendedPresentationElement.presentationElement.ruleInvocation);\n    } else {\n      throw new Error(\"Usupported type\");\n    }\n  };\n\n  const mergeDocumentEditorElementsAndExtendedPresentationElements = (\n    extendedPresentationElements: List<ExtendedPresentationElement>,\n    elements?: List<DocumentEditorElement>\n  ): List<DocumentEditorElement> => {\n    return extendedPresentationElements.map((extendedPresentationElement, index) =>\n      mergeDocumentEditorElementAndExtendedPresentationElement(extendedPresentationElement, elements?.get(index))\n    );\n  };\n\n  const mergeDocumentEditorElementAndExtendedPresentationElement = (\n    extendedPresentationElement: ExtendedPresentationElement,\n    element?: DocumentEditorElement\n  ): DocumentEditorElement => {\n    if (extendedPresentationElement instanceof ExtendedRuleInvocationPresentationElement) {\n      return mergeDocumentEditorRuleInvocationElementAndExtendedRuleInvocationPresentationElement(extendedPresentationElement, element);\n    } else if (extendedPresentationElement instanceof ExtendedSectionPresentationElement) {\n      return mergeDocumentEditorSectionElementAndExtendedSectionPresentationElement(extendedPresentationElement, element);\n    } else {\n      throw Error(\"ExtendedPresentationElement type is not supported\");\n    }\n  };\n\n  const mergeDocumentEditorRuleInvocationElementAndExtendedRuleInvocationPresentationElement = (\n    extendedPresentationElement: ExtendedRuleInvocationPresentationElement,\n    element?: DocumentEditorElement\n  ): DocumentEditorRuleInvocationElement => {\n    const id = element instanceof DocumentEditorRuleInvocationElement ? element.id : nextElementId.next().toString();\n\n    return new DocumentEditorRuleInvocationElement(id, extendedPresentationElement);\n  };\n\n  const mergeDocumentEditorSectionElementAndExtendedSectionPresentationElement = (\n    extendedPresentationElement: ExtendedSectionPresentationElement,\n    element?: DocumentEditorElement\n  ): DocumentEditorSectionElement => {\n    const id = element instanceof DocumentEditorSectionElement ? element.id : nextElementId.next().toString();\n    const elements = element instanceof DocumentEditorSectionElement ? element.documentEditorElements : undefined;\n\n    return new DocumentEditorSectionElement(\n      id,\n      extendedPresentationElement.title,\n      mergeDocumentEditorElementsAndExtendedPresentationElements(extendedPresentationElement.nestedExtendedPresentationElements, elements)\n    );\n  };\n\n  const getListStyle = (isDraggingOver: boolean) => ({\n    background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\n  });\n\n  const getElementFromSection = (\n    elements: List<DocumentEditorElement>,\n    sectionId: string,\n    index: number\n  ): DocumentEditorElement | undefined => {\n    for (let element of elements.toArray()) {\n      if (element instanceof DocumentEditorSectionElement) {\n        if (element.id === sectionId) {\n          return element.documentEditorElements.get(index);\n        } else {\n          const nestedElement = getElementFromSection(element.documentEditorElements, sectionId, index);\n          if (nestedElement) {\n            return nestedElement;\n          }\n        }\n      }\n    }\n  };\n\n  const removeElementFromSection = (\n    elements: List<DocumentEditorElement>,\n    sectionId: string,\n    index: number\n  ): List<DocumentEditorElement> => {\n    return elements.map((element) => {\n      if (element instanceof DocumentEditorSectionElement) {\n        if (element.id === sectionId) {\n          return element.withDocumentEditorElements(element.documentEditorElements.remove(index));\n        } else {\n          return element.withDocumentEditorElements(removeElementFromSection(element.documentEditorElements, sectionId, index));\n        }\n      } else {\n        return element;\n      }\n    });\n  };\n\n  const addElementToSection = (\n    elements: List<DocumentEditorElement>,\n    sectionId: string,\n    index: number,\n    newElement: DocumentEditorElement\n  ): List<DocumentEditorElement> => {\n    return elements.map((element) => {\n      if (element instanceof DocumentEditorSectionElement) {\n        if (element.id === sectionId) {\n          return element.withDocumentEditorElements(element.documentEditorElements.insert(index, newElement));\n        } else {\n          return element.withDocumentEditorElements(removeElementFromSection(element.documentEditorElements, sectionId, index));\n        }\n      } else {\n        return element;\n      }\n    });\n  };\n\n  const prepareEmptyRuleInvocationArgument = (): MetaValue => {\n    return {\n      type: MetaValueType.Primitive,\n      value: \"\",\n    } as MetaPrimitiveValue;\n  };\n\n  const onDragEnd = (result: DropResult) => {\n    if (!elements || !result.destination) {\n      return;\n    }\n\n    if (result.source.droppableId === \"droppable\") {\n      refreshElements(moveItemInList(elements, result.source.index, result.destination.index));\n    }\n    if (result.source.droppableId === \"search\") {\n      const rule = rulesSearchResult.get(result.source.index);\n      if (rule) {\n        const newElement = new DocumentEditorRuleInvocationElement(\n          nextElementId.next().toString(),\n          new ExtendedRuleInvocationPresentationElement(\n            new RuleInvocationPresentationElement({\n              ruleId: rule.id,\n              arguments: rule.arguments.map(() => {\n                return prepareEmptyRuleInvocationArgument();\n              }),\n            }),\n            new NaturalLanguageProvision(\"\"),\n            rule,\n            List()\n          )\n        );\n        refreshElements(addElementToSection(elements, result.destination.droppableId, result.destination.index, newElement));\n      }\n    } else {\n      const elementToMove = getElementFromSection(elements, result.source.droppableId, result.source.index);\n      if (elementToMove) {\n        refreshElements(\n          addElementToSection(\n            removeElementFromSection(elements, result.source.droppableId, result.source.index),\n            result.destination.droppableId,\n            result.destination.index,\n            elementToMove\n          )\n        );\n      }\n    }\n  };\n\n  const convertToContract = (elements: List<DocumentEditorElement>): Contract => {\n    return {\n      documentType: DocumentType.Contract,\n      id: contractId,\n      name: contractName,\n      description: contractDescription,\n      presentationElements: extractPresentationElementsFromDocumentEditorElements(elements),\n    } as Contract;\n  };\n\n  return !contractName || !elements || !contractId ? (\n    <div />\n  ) : (\n    <DocumentEditorContext.Provider value={{ projectId: projectId, documentId: contractDbId }}>\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Row>\n          <Col xs={4}>\n            <Row>\n              <Col>\n                <div css={Style.title}>Rule browser</div>\n                <RuleBrowser projectId={projectId} searchResult={rulesSearchResult} onSearchResultChange={setRulesSearchResult} />\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <div>\n                  <div css={Style.title} style={{ marginTop: \"20px\" }}>\n                    Actions\n                  </div>\n                  <Button onClick={() => saveDocument(contractDbId, convertToContract(elements))}>Save</Button>\n                  <Button onClick={() => downloadDocument(projectId, convertToContract(elements))}>Generate document</Button>\n                </div>\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <div>\n                  <div css={Style.title} style={{ marginTop: \"20px\" }}>\n                    Compilation errors\n                  </div>\n                  <div style={{ overflowY: \"auto\" }}>\n                    {outputMessages.map((message, index) => (\n                      <div key={index}>{message.message}</div>\n                    ))}\n                  </div>\n                </div>\n              </Col>\n            </Row>\n          </Col>\n          <Col>\n            <div>\n              <div css={Style.title}>{contractName}</div>\n              <div>\n                <Droppable droppableId=\"droppable\" type=\"top\">\n                  {(provided, snapshot) => (\n                    <div {...provided.droppableProps} ref={provided.innerRef} style={getListStyle(snapshot.isDraggingOver)}>\n                      {elements.map((element, index) => (\n                        <Draggable key={element.id} draggableId={element.id} index={index}>\n                          {(provided, snapshot) => (\n                            <div ref={provided.innerRef} {...provided.draggableProps} style={provided.draggableProps.style}>\n                              <PresentationElementView\n                                key={index}\n                                element={element}\n                                onElementChange={(element) => {\n                                  refreshElements(elements.set(index, element));\n                                }}\n                                dragHandleProps={provided.dragHandleProps}\n                                onElementRemove={() => refreshElements(elements.remove(index))}\n                              />\n                            </div>\n                          )}\n                        </Draggable>\n                      ))}\n                      {provided.placeholder}\n                    </div>\n                  )}\n                </Droppable>\n                <AddButton\n                  onClick={() =>\n                    refreshElements(elements.push(new DocumentEditorSectionElement(nextElementId.next().toString(), \"\", List())))\n                  }\n                />\n              </div>\n            </div>\n          </Col>\n        </Row>\n      </DragDropContext>\n    </DocumentEditorContext.Provider>\n  );\n};\n\nexport default ContractPage;\n",["271","272"],"/home/piotr/Projects/SmartLaw/frontend/src/page/LibraryPage.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/reportWebVitals.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/service/DocumentService.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/context/DocumentEditorContext.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/utils/AtomicInteger.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/model/MetaValue.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/model/RuleInvocationPresentationElement.ts",[],["273","274"],"/home/piotr/Projects/SmartLaw/frontend/src/model/Contract.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/model/PresentationElement.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/model/RuleInvocation.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/model/MetaPrimitiveValue.ts",[],["275","276"],"/home/piotr/Projects/SmartLaw/frontend/src/model/ExtendPresentationElementsResultDto.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/model/Template.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/model/TextEngineTemplate.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/index.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/utils/ListUtils.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/model/ExtendedRuleInvocationPresentationElement.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/model/NaturalLanguageProvision.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/service/RuleService.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/model/Id.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/model/StaticTemplate.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/model/AnnotationType.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/model/Library.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/service/ProjectService.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/model/Document.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/utils/Decoders.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/model/ExtendedPresentationElement.ts",["277"],"/home/piotr/Projects/SmartLaw/frontend/src/model/MetaArgument.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/component/presentation-element/SectionPresentationElementView.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/component/template/TextEngineTemplateEditor.tsx",[],["278","279"],"/home/piotr/Projects/SmartLaw/frontend/src/component/template/StaticTemplateEditor.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/common/SelectField.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/model/SectionPresentationElement.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/component/presentation-element/PresentationElementView.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/component/rule/RuleArgumentListEditor.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/model/OutputMessage.ts",[],["280","281"],"/home/piotr/Projects/SmartLaw/frontend/src/model/ValidationResult.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/component/template/TemplateEditor.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/component/rule/RuleEditor.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/component/RuleBrowser.tsx",["282"],"import React, { useEffect, useState } from \"react\";\nimport { Card, Form } from \"react-bootstrap\";\nimport { Draggable, Droppable } from \"react-beautiful-dnd\";\nimport Id from \"../model/Id\";\nimport { searchRules } from \"../service/RuleService\";\nimport { List } from \"immutable\";\nimport Rule from \"../model/Rule\";\n\nexport interface RuleBrowserProps {\n  projectId: string;\n  searchResult: List<Rule>;\n  onSearchResultChange: (searchResult: List<Rule>) => void;\n}\n\nconst convertIdToString = (id: Id): string => {\n  if (id.namespace) {\n    return id.namespace + \".\" + id.id;\n  } else {\n    return id.id;\n  }\n};\n\nconst RuleBrowser = ({ projectId, searchResult, onSearchResultChange }: RuleBrowserProps) => {\n  const [searchPhrase, setSearchPhrase] = useState(\"\");\n  useEffect(() => {\n    let isSubscribed = true;\n    searchRules({ searchPhrase, projectId }).then((rules) => {\n      if (isSubscribed) {\n        onSearchResultChange(rules);\n      }\n    });\n\n    return () => {\n      isSubscribed = false;\n    };\n  }, [searchPhrase]);\n\n  return (\n    <div>\n      <div style={{ marginBottom: \"15px\" }}>\n        <Form.Control\n          type=\"text\"\n          placeholder=\"Search phrase\"\n          value={searchPhrase}\n          onChange={(event) => setSearchPhrase(event.target.value)}\n        />\n      </div>\n      <div style={{ height: \"400px\", overflowY: \"auto\" }}>\n        <Droppable droppableId=\"search\" type=\"nested\">\n          {(provided, snapshot) => (\n            <div {...provided.droppableProps} ref={provided.innerRef}>\n              {searchResult.map((rule, index) => (\n                <Draggable key={convertIdToString(rule.id)} draggableId={convertIdToString(rule.id)} index={index}>\n                  {(provided, snapshot) => (\n                    <div ref={provided.innerRef} {...provided.draggableProps} style={provided.draggableProps.style}>\n                      <div {...provided.dragHandleProps}>\n                        <Card body>{rule.name}</Card>\n                      </div>\n                    </div>\n                  )}\n                </Draggable>\n              ))}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </div>\n    </div>\n  );\n};\n\nexport default RuleBrowser;\n","/home/piotr/Projects/SmartLaw/frontend/src/model/Element.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/component/rule/RuleArgumentEditor.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/model/Annotation.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/service/Types.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/utils/Hooks.ts",["283","284"],"import { DependencyList, useEffect } from \"react\";\n\nexport const useFetchedData = <T>(fetch: () => Promise<T>, action: (data: T) => void, deps?: DependencyList) => {\n  useEffect(() => {\n    let isSubscribed = true;\n    fetch().then((data) => {\n      if (isSubscribed) {\n        action(data);\n      }\n    });\n\n    return () => {\n      isSubscribed = false;\n    };\n  }, deps);\n};\n","/home/piotr/Projects/SmartLaw/frontend/src/component/presentation-element/RuleInvocationView.tsx",["285"],"/** @jsxImportSource @emotion/react */\nimport React from \"react\";\nimport MetaValue, { MetaValueType } from \"../../model/MetaValue\";\nimport { List } from \"immutable\";\nimport MetaArgument from \"../../model/MetaArgument\";\nimport MetaPrimitiveValue from \"../../model/MetaPrimitiveValue\";\nimport { Accordion, Button, Card, Form } from \"react-bootstrap\";\nimport DOMPurify from \"dompurify\";\nimport { DocumentEditorRuleInvocationElement } from \"../../page/ContractPage\";\nimport { DraggableProvidedDragHandleProps } from \"react-beautiful-dnd\";\nimport { css } from \"@emotion/react\";\nimport { ValidationResult } from \"../../model/ValidationResult\";\nimport Datetime from \"react-datetime\";\n\nconst Styles = {\n  holder: css`\n    width: 20px;\n    min-width: 20px;\n    border: 1px solid;\n    background-color: gray;\n  `,\n};\n\ninterface RuleInvocationViewProps {\n  element: DocumentEditorRuleInvocationElement;\n  onArgumentsChange: (newArguments: List<MetaValue>) => void;\n  onRemove: () => void;\n  dragHandleProps?: DraggableProvidedDragHandleProps;\n}\n\nconst RuleInvocationView = ({ element, onArgumentsChange, onRemove, dragHandleProps }: RuleInvocationViewProps) => {\n  const renderContent = () => (\n    <div\n      dangerouslySetInnerHTML={{\n        __html: DOMPurify.sanitize(element.extendedPresentationElement.naturalLanguageDocumentObject.content, { ALLOWED_TAGS: [\"b\"] }),\n      }}\n    />\n  );\n  const renderArgumentValidationResults = (validationResults?: List<ValidationResult>) => {\n    if (validationResults === undefined) {\n      return <div />;\n    }\n\n    return validationResults\n      .map((validationResult) => validationResult.error)\n      .filter((error) => error !== null)\n      .map((error, index) => (\n        <div key={index} style={{ color: \"red\" }}>\n          {error}\n        </div>\n      ));\n  };\n\n  const renderArgumentValue = (index: number, ruleArgument: MetaArgument, ruleInvocationArgument: MetaPrimitiveValue) => {\n    switch (ruleArgument.type.id) {\n      case \"String\":\n        return (\n          <Form.Control\n            type=\"text\"\n            value={(ruleInvocationArgument as MetaPrimitiveValue).value}\n            onChange={(event) =>\n              onArgumentsChange(\n                element.extendedPresentationElement.presentationElement.ruleInvocation.arguments.set(index, {\n                  ...ruleInvocationArgument,\n                  value: event.target.value,\n                } as MetaPrimitiveValue)\n              )\n            }\n          />\n        );\n      case \"Integer\":\n        return (\n          <Form.Control\n            type=\"number\"\n            value={(ruleInvocationArgument as MetaPrimitiveValue).value}\n            onChange={(event) =>\n              onArgumentsChange(\n                element.extendedPresentationElement.presentationElement.ruleInvocation.arguments.set(index, {\n                  ...ruleInvocationArgument,\n                  value: event.target.value,\n                } as MetaPrimitiveValue)\n              )\n            }\n          />\n        );\n      case \"LocalDate\":\n        return (\n          <Datetime\n            dateFormat={\"YYYY-MM-DD\"}\n            timeFormat={false}\n            utc={true}\n            value={(ruleInvocationArgument as MetaPrimitiveValue).value}\n            onChange={(value) =>\n              onArgumentsChange(\n                element.extendedPresentationElement.presentationElement.ruleInvocation.arguments.set(index, {\n                  ...ruleInvocationArgument,\n                  value: typeof value === \"string\" ? value : value.format(\"YYYY-MM-DD\"),\n                } as MetaPrimitiveValue)\n              )\n            }\n          />\n        );\n      default:\n        return <div>Unknown argument type {ruleArgument.type.id}</div>;\n    }\n  };\n\n  const renderArgumentEditor = (index: number, ruleArgument: MetaArgument, ruleInvocationArgument?: MetaValue) => {\n    if (ruleInvocationArgument === undefined) {\n      return <div>Null value</div>;\n    }\n\n    if (ruleInvocationArgument.type !== MetaValueType.Primitive) {\n      return (\n        <div>\n          Bad type of type. Expected {MetaValueType.Primitive} but was {ruleInvocationArgument.type}\n        </div>\n      );\n    }\n    const metaPrimitiveValue = ruleInvocationArgument as MetaPrimitiveValue;\n\n    return (\n      <div>\n        <span>{ruleArgument.displayName || ruleArgument.name}</span>\n        {renderArgumentValue(index, ruleArgument, metaPrimitiveValue)}\n      </div>\n    );\n  };\n\n  const renderArgument = (\n    index: number,\n    ruleArgument: MetaArgument,\n    ruleInvocationArgument: MetaValue | undefined,\n    validationResults: List<ValidationResult> | undefined\n  ) => {\n    return (\n      <div key={index} style={{ marginBottom: \"15px\" }}>\n        {renderArgumentEditor(index, ruleArgument, ruleInvocationArgument)}\n        {renderArgumentValidationResults(validationResults)}\n      </div>\n    );\n  };\n  const renderArgumentsEditor = () =>\n    element.extendedPresentationElement.rule === null ? (\n      <div />\n    ) : (\n      element.extendedPresentationElement.rule.arguments.map((ruleArgument, index) => {\n        return renderArgument(\n          index,\n          ruleArgument,\n          element.extendedPresentationElement.presentationElement.ruleInvocation.arguments.get(index),\n          element.extendedPresentationElement.validationResults.get(index)\n        );\n      })\n    );\n\n  return (\n    <Accordion>\n      <Card>\n        <Accordion.Toggle {...dragHandleProps} as={Card.Header} eventKey=\"0\">\n          {renderContent()}\n        </Accordion.Toggle>\n        <Accordion.Collapse eventKey=\"0\">\n          <Card.Body>\n            <div style={{ marginBottom: \"15px\" }}>\n              <Button variant={\"danger\"} onClick={onRemove}>\n                Remove\n              </Button>\n            </div>\n            {renderArgumentsEditor()}\n          </Card.Body>\n        </Accordion.Collapse>\n      </Card>\n    </Accordion>\n  );\n};\nexport default RuleInvocationView;\n","/home/piotr/Projects/SmartLaw/frontend/src/model/Rule.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/model/Type.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/model/DefinitionRef.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/component/element/ElementListTemplateEditor.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/component/IdField.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/common/TextField.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/component/element/ElementListStaticTemplateEditor.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/component/element/StateElementEditor.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/model/StateElement.ts",[],"/home/piotr/Projects/SmartLaw/frontend/src/component/element/ElementEditor.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/component/rule/RuleListEditor.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/common/ListEditor.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/component/element/ElementListEditor.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/component/rule/RuleInterfaceEditor.tsx",[],"/home/piotr/Projects/SmartLaw/frontend/src/common/AddButton.tsx",[],{"ruleId":"286","replacedBy":"287"},{"ruleId":"288","replacedBy":"289"},{"ruleId":"290","severity":1,"message":"291","line":9,"column":18,"nodeType":"292","messageId":"293","endLine":9,"endColumn":22},{"ruleId":"290","severity":1,"message":"294","line":27,"column":10,"nodeType":"292","messageId":"293","endLine":27,"endColumn":20},{"ruleId":"290","severity":1,"message":"295","line":93,"column":25,"nodeType":"292","messageId":"293","endLine":93,"endColumn":26},{"ruleId":"296","severity":1,"message":"297","line":115,"column":6,"nodeType":"298","endLine":115,"endColumn":8,"suggestions":"299"},{"ruleId":"296","severity":1,"message":"297","line":134,"column":6,"nodeType":"298","endLine":134,"endColumn":44,"suggestions":"300"},{"ruleId":"286","replacedBy":"301"},{"ruleId":"288","replacedBy":"302"},{"ruleId":"286","replacedBy":"303"},{"ruleId":"288","replacedBy":"304"},{"ruleId":"286","replacedBy":"305"},{"ruleId":"288","replacedBy":"306"},{"ruleId":"290","severity":1,"message":"307","line":5,"column":51,"nodeType":"292","messageId":"293","endLine":5,"endColumn":52},{"ruleId":"286","replacedBy":"308"},{"ruleId":"288","replacedBy":"309"},{"ruleId":"286","replacedBy":"310"},{"ruleId":"288","replacedBy":"311"},{"ruleId":"296","severity":1,"message":"312","line":36,"column":6,"nodeType":"298","endLine":36,"endColumn":20,"suggestions":"313"},{"ruleId":"296","severity":1,"message":"314","line":15,"column":6,"nodeType":"292","endLine":15,"endColumn":10},{"ruleId":"296","severity":1,"message":"315","line":15,"column":6,"nodeType":"292","endLine":15,"endColumn":10,"suggestions":"316"},{"ruleId":"290","severity":1,"message":"317","line":15,"column":7,"nodeType":"292","messageId":"293","endLine":15,"endColumn":13},"no-native-reassign",["318"],"no-negated-in-lhs",["319"],"@typescript-eslint/no-unused-vars","'Card' is defined but never used.","Identifier","unusedVar","'PlusSquare' is defined but never used.","'_' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'mergeDocumentEditorElementsAndExtendedPresentationElements'. Either include it or remove the dependency array.","ArrayExpression",["320"],["321"],["318"],["319"],["318"],["319"],["318"],["319"],"'T' is defined but never used.",["318"],["319"],["318"],["319"],"React Hook useEffect has missing dependencies: 'onSearchResultChange' and 'projectId'. Either include them or remove the dependency array. If 'onSearchResultChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["322"],"React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook useEffect has missing dependencies: 'action' and 'fetch'. Either include them or remove the dependency array. If 'fetch' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["323"],"'Styles' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"324","fix":"325"},{"desc":"326","fix":"327"},{"desc":"328","fix":"329"},{"desc":"330","fix":"331"},"Update the dependencies array to be: [mergeDocumentEditorElementsAndExtendedPresentationElements]",{"range":"332","text":"333"},"Update the dependencies array to be: [mergeDocumentEditorElementsAndExtendedPresentationElements, presentationElementsPendingExtending]",{"range":"334","text":"335"},"Update the dependencies array to be: [onSearchResultChange, projectId, searchPhrase]",{"range":"336","text":"337"},"Update the dependencies array to be: [action, fetch]",{"range":"338","text":"339"},[5034,5036],"[mergeDocumentEditorElementsAndExtendedPresentationElements]",[5589,5627],"[mergeDocumentEditorElementsAndExtendedPresentationElements, presentationElementsPendingExtending]",[1007,1021],"[onSearchResultChange, projectId, searchPhrase]",[368,372],"[action, fetch]"]